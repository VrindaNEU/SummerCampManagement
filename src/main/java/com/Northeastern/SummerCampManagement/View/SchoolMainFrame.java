/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.Northeastern.SummerCampManagement.View;

import com.Northeastern.SummerCampManagement.Entity.AppUser;
import com.Northeastern.SummerCampManagement.Entity.Feedback;
import com.Northeastern.SummerCampManagement.Entity.MealPreference;
import com.Northeastern.SummerCampManagement.Entity.Parent;
import com.Northeastern.SummerCampManagement.Entity.SchoolAdmin;
import com.Northeastern.SummerCampManagement.Entity.Student;
import com.Northeastern.SummerCampManagement.Service.CustomException;
import com.Northeastern.SummerCampManagement.Service.ParentService;
import com.Northeastern.SummerCampManagement.Service.SchoolAdminService;
import com.Northeastern.SummerCampManagement.Service.StudentService;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import static com.Northeastern.SummerCampManagement.Entity.MealPreference.FoodPreference;
import com.Northeastern.SummerCampManagement.Service.FeedbackService;
import com.Northeastern.SummerCampManagement.cellModifier.TableActionCellEditor;
import com.Northeastern.SummerCampManagement.cellModifier.TableActionCellRender;
import com.Northeastern.SummerCampManagement.cellModifier.TableActionEvent;
import java.awt.Image;

import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.RestController;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import java.net.URL;
import javax.swing.JLabel;

/**
 *
 * @author jalan
 */


public class SchoolMainFrame extends javax.swing.JFrame {
    //********Autowiring********//
    ParentService parentService ;
    StudentService studentService;
    SchoolAdminService schoolAdminService;
    FeedbackService feedbackService;
   //****--end---********//
    public ArrayList<Parent> parentList = new ArrayList<Parent>();
    public ArrayList<Student> studentList = new ArrayList<Student>();
    private Parent selectedParent;
    public ArrayList<Integer> parentIDs = new ArrayList<>();
    Parent parent;
    Student student;
    SchoolAdmin schoolAdmin;
    Integer loggedInUserId;
    MealPreference mealPreference;
    Feedback feedback;
    /**
     * Creates new form MainFrame
     */
    public SchoolMainFrame() {
        initComponents();
        schoolSplitPane.setVisible(false);
        topPanel.setVisible(false);
        bottomPanel.setVisible(false);
        loginPanel.setVisible(true);
        
        //********Autowiring********//
        parentService = (ParentService) BeanUtil.getBean("parentService");
        
         schoolAdminService = (SchoolAdminService) BeanUtil.getBean("schoolAdminService");
        studentService = (StudentService) BeanUtil.getBean("studentService");
          feedbackService = (FeedbackService) BeanUtil.getBean("feedbackService");
      //****--end---********//
        
     parent = new Parent();
     
     student = new Student();
      schoolAdmin = new SchoolAdmin();
      mealPreference = new MealPreference();
      feedback = new Feedback();
     
     //to be moved later
     
     
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLocaleChooser1 = new com.toedter.components.JLocaleChooser();
        loginPanel = new javax.swing.JPanel();
        userNameLoginLabel = new javax.swing.JLabel();
        passwordLoginPanel = new javax.swing.JLabel();
        roleLoginLabel = new javax.swing.JLabel();
        usernameSchoolTextField = new javax.swing.JTextField();
        passwordSchoolTextField = new javax.swing.JTextField();
        roleSchoolDropBox = new javax.swing.JComboBox<>();
        welcomeSchoolLabel = new javax.swing.JLabel();
        loginSchoolButton = new javax.swing.JButton();
        schoolSplitPane = new javax.swing.JSplitPane();
        topPanel = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        adminPanel = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        rightPanel = new javax.swing.JPanel();
        adminDashboard = new javax.swing.JPanel();
        dashboardStudentLabel = new javax.swing.JLabel();
        dashboardParentLabel = new javax.swing.JLabel();
        studentTextLabel = new javax.swing.JLabel();
        parentsTextLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        studentCrudPanel = new javax.swing.JPanel();
        studentCrudTextLabel = new javax.swing.JLabel();
        firstNameTextLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        conactNumbertextLabel = new javax.swing.JLabel();
        emailTextLabel = new javax.swing.JLabel();
        ageTextLabel = new javax.swing.JLabel();
        addressTextLabel = new javax.swing.JLabel();
        contactNumberTextField = new javax.swing.JTextField();
        ageTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentInfoTable = new javax.swing.JTable();
        guardianTextLabel = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        selectParentComboBox = new javax.swing.JComboBox<>();
        parentCrudPanel = new javax.swing.JPanel();
        parentCrudtextLabel = new javax.swing.JLabel();
        firstNameParentTextLabel = new javax.swing.JLabel();
        parentFirstNameField = new javax.swing.JTextField();
        lastNameParentTextLabel = new javax.swing.JLabel();
        emailParentTextLabel = new javax.swing.JLabel();
        contactNumberTextLabel = new javax.swing.JLabel();
        addressParentTextLabel = new javax.swing.JLabel();
        lastNameParentTextfield = new javax.swing.JTextField();
        contactNumberParentTextField = new javax.swing.JTextField();
        addressParentTextField = new javax.swing.JTextField();
        emailParentTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        parentInfoTable = new javax.swing.JTable();
        createParentButton = new javax.swing.JButton();
        leftPanel = new javax.swing.JPanel();
        dashboardButton1 = new javax.swing.JButton();
        parentCrudButton = new javax.swing.JButton();
        studentCrudButton = new javax.swing.JButton();
        parentPanel = new javax.swing.JPanel();
        parentSplitPane = new javax.swing.JSplitPane();
        rightParentPanel = new javax.swing.JPanel();
        parentDashboard = new javax.swing.JPanel();
        parentDashboardDownloadButton = new javax.swing.JButton();
        parentDashboardLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        parentDashboardStudentTable = new javax.swing.JTable();
        parentFeedbackPanel = new javax.swing.JPanel();
        studentCrudTextLabel1 = new javax.swing.JLabel();
        Q1Label = new javax.swing.JLabel();
        conactNumbertextLabel1 = new javax.swing.JLabel();
        usernameTextLabel1 = new javax.swing.JLabel();
        guardianTextLabel1 = new javax.swing.JLabel();
        createButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        recommendationFeedbackTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        foodFeedbackCombo = new javax.swing.JComboBox<>();
        staffFeedbackCombo = new javax.swing.JComboBox<>();
        activityFeedbackCombo = new javax.swing.JComboBox<>();
        overallFeedbackCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        studentFeedbackId = new javax.swing.JTextField();
        Q1Label1 = new javax.swing.JLabel();
        conactNumbertextLabel2 = new javax.swing.JLabel();
        schoolReportPanel = new javax.swing.JPanel();
        schoolReportLabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        schoolReportTable = new javax.swing.JTable();
        parentProfilePanel = new javax.swing.JPanel();
        parentCrudtextLabel1 = new javax.swing.JLabel();
        firstNameProfileTextLabel1 = new javax.swing.JLabel();
        profileFirstNameTextfield = new javax.swing.JTextField();
        lastNameProfileLabel = new javax.swing.JLabel();
        emailParentProfileLabel = new javax.swing.JLabel();
        contactNumberParentProfileLabel = new javax.swing.JLabel();
        addressParentProfileLabel = new javax.swing.JLabel();
        lastNameProfileTextfield = new javax.swing.JTextField();
        contactNoParentProfileTextField = new javax.swing.JTextField();
        addressParentProfileTextField = new javax.swing.JTextField();
        emailParentProfileTextField = new javax.swing.JTextField();
        editParentButton1 = new javax.swing.JButton();
        updateParentButton1 = new javax.swing.JButton();
        leftParentPanel = new javax.swing.JPanel();
        profileButton = new javax.swing.JButton();
        parentDashboardButton = new javax.swing.JButton();
        schoolReportButton = new javax.swing.JButton();
        feedbackButton = new javax.swing.JButton();
        studentPanel = new javax.swing.JPanel();
        studentSplitPane = new javax.swing.JSplitPane();
        rightStudentPanel = new javax.swing.JPanel();
        studentDashboard = new javax.swing.JPanel();
        studentDashboard1 = new javax.swing.JPanel();
        studentDashboardLabel3 = new javax.swing.JLabel();
        imgThree = new javax.swing.JLabel();
        imgOne = new javax.swing.JLabel();
        studentDashboardLabel5 = new javax.swing.JLabel();
        studentProfilePanel = new javax.swing.JPanel();
        parentCrudtextLabel2 = new javax.swing.JLabel();
        firstNameProfileLabel = new javax.swing.JLabel();
        lastNameStudentProfileLabel = new javax.swing.JLabel();
        emailStudentProfileLabel = new javax.swing.JLabel();
        contactNumberStudentProfileLabel = new javax.swing.JLabel();
        addressStudentProfileLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        emailStudentTextLabel = new javax.swing.JLabel();
        studentFirstNameTextLabel = new javax.swing.JLabel();
        AddressStudentTextLabel = new javax.swing.JLabel();
        lastNameStudentText = new javax.swing.JLabel();
        ContactNumberStudentText = new javax.swing.JLabel();
        AgeStudentText = new javax.swing.JLabel();
        studentschoolReportPanel = new javax.swing.JPanel();
        schoolReportLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        AttendancestudentText = new javax.swing.JLabel();
        gradeStudentText = new javax.swing.JLabel();
        studentCampRegistrationPanel = new javax.swing.JPanel();
        campReportLabel1 = new javax.swing.JLabel();
        studentMealPrefLabel1 = new javax.swing.JLabel();
        addCampRegistrationButton = new javax.swing.JButton();
        campRegistrationUserName = new javax.swing.JLabel();
        campRegistrationPassword = new javax.swing.JLabel();
        studentCampPassword = new javax.swing.JTextField();
        studentCampUsername = new javax.swing.JTextField();
        beveragePreference = new javax.swing.JComboBox<>();
        campRegistrationBeverageLabel = new javax.swing.JLabel();
        campRegistrationFoodLabel = new javax.swing.JLabel();
        campRegistrationAllergiesLabel = new javax.swing.JLabel();
        foodPreferences = new javax.swing.JComboBox<>();
        campRegistrationMedCondition = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        allergies = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        medicalConditions = new javax.swing.JTextArea();
        leftStudentPanel = new javax.swing.JPanel();
        studentProfileButton = new javax.swing.JButton();
        studentDashboardButton = new javax.swing.JButton();
        studentCampRegButton = new javax.swing.JButton();
        studentReportButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userNameLoginLabel.setText("Username");

        passwordLoginPanel.setText("Password");

        roleLoginLabel.setText("Role");

        passwordSchoolTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordSchoolTextFieldActionPerformed(evt);
            }
        });

        roleSchoolDropBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "student", "parent", "admin" }));

        welcomeSchoolLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        welcomeSchoolLabel.setText("WELCOME TO THE SCHOOL CAMP");

        loginSchoolButton.setText("LOGIN");
        loginSchoolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginSchoolButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(loginPanelLayout.createSequentialGroup()
                                    .addComponent(passwordLoginPanel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(passwordSchoolTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(loginPanelLayout.createSequentialGroup()
                                    .addComponent(userNameLoginLabel)
                                    .addGap(97, 97, 97)
                                    .addComponent(usernameSchoolTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, loginPanelLayout.createSequentialGroup()
                                .addComponent(roleLoginLabel)
                                .addGap(127, 127, 127)
                                .addComponent(roleSchoolDropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(welcomeSchoolLabel))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(loginSchoolButton)))
                .addContainerGap(211, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(welcomeSchoolLabel)
                .addGap(65, 65, 65)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLoginLabel)
                    .addComponent(usernameSchoolTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLoginPanel)
                    .addComponent(passwordSchoolTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleLoginLabel)
                    .addComponent(roleSchoolDropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addComponent(loginSchoolButton)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        schoolSplitPane.setDividerLocation(70);
        schoolSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        schoolSplitPane.setPreferredSize(new java.awt.Dimension(716, 595));

        topPanel.setBackground(new java.awt.Color(204, 255, 255));

        logoutButton.setForeground(new java.awt.Color(255, 51, 0));
        logoutButton.setText("X");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap(272, Short.MAX_VALUE)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(189, 189, 189)
                .addComponent(logoutButton)
                .addGap(23, 23, 23))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(logoutButton))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        schoolSplitPane.setTopComponent(topPanel);

        bottomPanel.setPreferredSize(new java.awt.Dimension(700, 520));
        bottomPanel.setLayout(new java.awt.CardLayout());

        adminPanel.setPreferredSize(new java.awt.Dimension(700, 520));

        jSplitPane2.setDividerLocation(100);
        jSplitPane2.setPreferredSize(new java.awt.Dimension(700, 595));

        rightPanel.setPreferredSize(new java.awt.Dimension(599, 595));
        rightPanel.setLayout(new java.awt.CardLayout());

        dashboardStudentLabel.setText("No. Of Students");

        dashboardParentLabel.setText("No. Of Parents");

        studentTextLabel.setText("number here");

        parentsTextLabel.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("DASHBOARD");

        javax.swing.GroupLayout adminDashboardLayout = new javax.swing.GroupLayout(adminDashboard);
        adminDashboard.setLayout(adminDashboardLayout);
        adminDashboardLayout.setHorizontalGroup(
            adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminDashboardLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(dashboardStudentLabel)
                .addGap(48, 48, 48)
                .addGroup(adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminDashboardLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(adminDashboardLayout.createSequentialGroup()
                        .addComponent(studentTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(dashboardParentLabel)
                        .addGap(36, 36, 36)
                        .addComponent(parentsTextLabel)
                        .addContainerGap(53, Short.MAX_VALUE))))
        );
        adminDashboardLayout.setVerticalGroup(
            adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDashboardLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabel2)
                .addGap(48, 48, 48)
                .addGroup(adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dashboardStudentLabel)
                    .addComponent(dashboardParentLabel)
                    .addComponent(parentsTextLabel))
                .addContainerGap(420, Short.MAX_VALUE))
        );

        rightPanel.add(adminDashboard, "card2");

        studentCrudPanel.setPreferredSize(new java.awt.Dimension(599, 595));

        studentCrudTextLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        studentCrudTextLabel.setText("STUDENT CRUD");

        firstNameTextLabel.setText("First Name");

        firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldActionPerformed(evt);
            }
        });

        lastNameTextLabel.setText("Last Name");

        conactNumbertextLabel.setText("Contact No.");

        emailTextLabel.setText("Email");

        ageTextLabel.setText("Age");

        addressTextLabel.setText("Address");

        studentInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Student ID", "First Name", "Last Name", "Contact Number", "Email", "Age", "Address", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentInfoTable.setPreferredSize(new java.awt.Dimension(599, 120));
        studentInfoTable.setRowHeight(40);
        jScrollPane1.setViewportView(studentInfoTable);

        guardianTextLabel.setText("Guardian");

        createButton.setText("CREATE");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentCrudPanelLayout = new javax.swing.GroupLayout(studentCrudPanel);
        studentCrudPanel.setLayout(studentCrudPanelLayout);
        studentCrudPanelLayout.setHorizontalGroup(
            studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentCrudPanelLayout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(createButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(studentCrudPanelLayout.createSequentialGroup()
                .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentCrudPanelLayout.createSequentialGroup()
                        .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentCrudPanelLayout.createSequentialGroup()
                                .addGap(153, 153, 153)
                                .addComponent(studentCrudTextLabel))
                            .addGroup(studentCrudPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(studentCrudPanelLayout.createSequentialGroup()
                                        .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(firstNameTextLabel)
                                            .addComponent(conactNumbertextLabel))
                                        .addGap(34, 34, 34)
                                        .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(contactNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(62, 62, 62)
                                        .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lastNameTextLabel)
                                            .addComponent(emailTextLabel)))
                                    .addComponent(ageTextLabel))
                                .addGap(32, 32, 32)
                                .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(studentCrudPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(guardianTextLabel)
                                .addGap(50, 50, 50)
                                .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectParentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(studentCrudPanelLayout.createSequentialGroup()
                                        .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(62, 62, 62)
                                        .addComponent(addressTextLabel)
                                        .addGap(44, 44, 44)
                                        .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 199, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        studentCrudPanelLayout.setVerticalGroup(
            studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentCrudPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(studentCrudTextLabel)
                .addGap(18, 18, 18)
                .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameTextLabel)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(conactNumbertextLabel)
                    .addComponent(contactNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailTextLabel)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageTextLabel)
                    .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressTextLabel)
                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(studentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardianTextLabel)
                    .addComponent(selectParentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(createButton)
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        rightPanel.add(studentCrudPanel, "card3");

        parentCrudPanel.setPreferredSize(new java.awt.Dimension(599, 595));

        parentCrudtextLabel.setText("PARENT CRUD");

        firstNameParentTextLabel.setText("First Name");

        lastNameParentTextLabel.setText("Last Name");

        emailParentTextLabel.setText("Email");

        contactNumberTextLabel.setText("Contact Number");

        addressParentTextLabel.setText("Address");

        emailParentTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailParentTextFieldActionPerformed(evt);
            }
        });

        parentInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ParentID", "First Name", "Last Name", "Email", "Address", "Contact#", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        parentInfoTable.setPreferredSize(new java.awt.Dimension(300, 120));
        jScrollPane2.setViewportView(parentInfoTable);

        createParentButton.setText("CREATE");
        createParentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createParentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout parentCrudPanelLayout = new javax.swing.GroupLayout(parentCrudPanel);
        parentCrudPanel.setLayout(parentCrudPanelLayout);
        parentCrudPanelLayout.setHorizontalGroup(
            parentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentCrudPanelLayout.createSequentialGroup()
                .addGroup(parentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parentCrudPanelLayout.createSequentialGroup()
                        .addGroup(parentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(parentCrudPanelLayout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(parentCrudtextLabel))
                            .addGroup(parentCrudPanelLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(parentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(parentCrudPanelLayout.createSequentialGroup()
                                        .addGroup(parentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(parentCrudPanelLayout.createSequentialGroup()
                                                .addComponent(firstNameParentTextLabel)
                                                .addGap(30, 30, 30)
                                                .addComponent(parentFirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(parentCrudPanelLayout.createSequentialGroup()
                                                .addComponent(emailParentTextLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(emailParentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(parentCrudPanelLayout.createSequentialGroup()
                                                .addComponent(addressParentTextLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(addressParentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(174, 174, 174)
                                        .addGroup(parentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(parentCrudPanelLayout.createSequentialGroup()
                                                .addComponent(contactNumberTextLabel)
                                                .addGap(38, 38, 38)
                                                .addComponent(contactNumberParentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(parentCrudPanelLayout.createSequentialGroup()
                                                .addComponent(lastNameParentTextLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lastNameParentTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(parentCrudPanelLayout.createSequentialGroup()
                                        .addGap(220, 220, 220)
                                        .addComponent(createParentButton)))))
                        .addGap(0, 40, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parentCrudPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        parentCrudPanelLayout.setVerticalGroup(
            parentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentCrudPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(parentCrudtextLabel)
                .addGap(18, 18, 18)
                .addGroup(parentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameParentTextLabel)
                    .addComponent(parentFirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameParentTextLabel)
                    .addComponent(lastNameParentTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(parentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailParentTextLabel)
                    .addComponent(contactNumberTextLabel)
                    .addComponent(contactNumberParentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailParentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(parentCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressParentTextLabel)
                    .addComponent(addressParentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(createParentButton)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        rightPanel.add(parentCrudPanel, "card4");

        jSplitPane2.setRightComponent(rightPanel);

        leftPanel.setBackground(new java.awt.Color(153, 153, 153));

        dashboardButton1.setText("DashBoard");
        dashboardButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardButton1ActionPerformed(evt);
            }
        });

        parentCrudButton.setText("Parent");
        parentCrudButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentCrudButtonActionPerformed(evt);
            }
        });

        studentCrudButton.setText("Student");
        studentCrudButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentCrudButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentCrudButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parentCrudButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dashboardButton1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(dashboardButton1)
                .addGap(46, 46, 46)
                .addComponent(parentCrudButton)
                .addGap(56, 56, 56)
                .addComponent(studentCrudButton)
                .addContainerGap(210, Short.MAX_VALUE))
        );

        jSplitPane2.setLeftComponent(leftPanel);

        javax.swing.GroupLayout adminPanelLayout = new javax.swing.GroupLayout(adminPanel);
        adminPanel.setLayout(adminPanelLayout);
        adminPanelLayout.setHorizontalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        adminPanelLayout.setVerticalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bottomPanel.add(adminPanel, "card2");

        parentPanel.setPreferredSize(new java.awt.Dimension(700, 595));

        parentSplitPane.setDividerLocation(120);
        parentSplitPane.setPreferredSize(new java.awt.Dimension(700, 595));

        rightParentPanel.setLayout(new java.awt.CardLayout());

        parentDashboardDownloadButton.setText("DOWNLOAD REPORT");
        parentDashboardDownloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentDashboardDownloadButtonActionPerformed(evt);
            }
        });

        parentDashboardLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        parentDashboardLabel.setText("DASHBOARD");

        parentDashboardStudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Id", "Student", "Age", "In Summer Camp"
            }
        ));
        jScrollPane7.setViewportView(parentDashboardStudentTable);

        javax.swing.GroupLayout parentDashboardLayout = new javax.swing.GroupLayout(parentDashboard);
        parentDashboard.setLayout(parentDashboardLayout);
        parentDashboardLayout.setHorizontalGroup(
            parentDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentDashboardLayout.createSequentialGroup()
                .addGroup(parentDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parentDashboardLayout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(parentDashboardLabel))
                    .addGroup(parentDashboardLayout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(parentDashboardDownloadButton))
                    .addGroup(parentDashboardLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        parentDashboardLayout.setVerticalGroup(
            parentDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentDashboardLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(parentDashboardLabel)
                .addGap(83, 83, 83)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(parentDashboardDownloadButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rightParentPanel.add(parentDashboard, "card2");

        parentFeedbackPanel.setPreferredSize(new java.awt.Dimension(599, 595));

        studentCrudTextLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        studentCrudTextLabel1.setText("CAMP FEEDBACK");

        Q1Label.setText("1. Food Feedback: How would you rate the quality and variety of the");

        conactNumbertextLabel1.setText("2. Staff Feedback: Were the camp counselors and staff helpful, friendly, ");

        usernameTextLabel1.setText("3. Activity Feedback: Did your child enjoy the activities offered at the camp?");

        guardianTextLabel1.setText("4. How satisfied were you with the overall management and organization of the camp?");

        createButton1.setText("SUBMIT");
        createButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("5. Please provide any recommendations or suggestions for improving the camp experience.");

        recommendationFeedbackTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recommendationFeedbackTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText(" (Please rate on a scale of 1 to 5, with 1 being poor and 5 being excellent)");

        foodFeedbackCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        staffFeedbackCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        activityFeedbackCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        overallFeedbackCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        jLabel5.setText("Student Id");

        Q1Label1.setText("meals provided at the camp?");

        conactNumbertextLabel2.setText("and attentive to your child's needs?");

        javax.swing.GroupLayout parentFeedbackPanelLayout = new javax.swing.GroupLayout(parentFeedbackPanel);
        parentFeedbackPanel.setLayout(parentFeedbackPanelLayout);
        parentFeedbackPanelLayout.setHorizontalGroup(
            parentFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                .addGroup(parentFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(activityFeedbackCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(overallFeedbackCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(parentFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(studentFeedbackId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(parentFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(Q1Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Q1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(foodFeedbackCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(parentFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(staffFeedbackCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(conactNumbertextLabel2)))
                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(usernameTextLabel1))
                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(createButton1))
                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(studentCrudTextLabel1))
                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(parentFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guardianTextLabel1)
                            .addComponent(jLabel1)))
                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(conactNumbertextLabel1))
                    .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(recommendationFeedbackTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        parentFeedbackPanelLayout.setVerticalGroup(
            parentFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentFeedbackPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(studentCrudTextLabel1)
                .addGap(20, 20, 20)
                .addGroup(parentFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(studentFeedbackId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Q1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Q1Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(foodFeedbackCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(conactNumbertextLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(conactNumbertextLabel2)
                .addGap(2, 2, 2)
                .addComponent(staffFeedbackCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameTextLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(activityFeedbackCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(guardianTextLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(overallFeedbackCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(recommendationFeedbackTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createButton1)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        rightParentPanel.add(parentFeedbackPanel, "card3");

        schoolReportLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        schoolReportLabel.setText("SCHOOL REPORT");

        schoolReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StudentName", "Attendance", "Overall Grade"
            }
        ));
        jScrollPane6.setViewportView(schoolReportTable);

        javax.swing.GroupLayout schoolReportPanelLayout = new javax.swing.GroupLayout(schoolReportPanel);
        schoolReportPanel.setLayout(schoolReportPanelLayout);
        schoolReportPanelLayout.setHorizontalGroup(
            schoolReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schoolReportPanelLayout.createSequentialGroup()
                .addGroup(schoolReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(schoolReportPanelLayout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(schoolReportLabel))
                    .addGroup(schoolReportPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        schoolReportPanelLayout.setVerticalGroup(
            schoolReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schoolReportPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(schoolReportLabel)
                .addGap(88, 88, 88)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rightParentPanel.add(schoolReportPanel, "card5");

        parentProfilePanel.setPreferredSize(new java.awt.Dimension(599, 595));

        parentCrudtextLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        parentCrudtextLabel1.setText("PROFILE");

        firstNameProfileTextLabel1.setText("First Name");

        lastNameProfileLabel.setText("Last Name");

        emailParentProfileLabel.setText("Email");

        contactNumberParentProfileLabel.setText("Contact Number");

        addressParentProfileLabel.setText("Address");

        editParentButton1.setText("EDIT");
        editParentButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editParentButton1ActionPerformed(evt);
            }
        });

        updateParentButton1.setText("SAVE");
        updateParentButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateParentButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout parentProfilePanelLayout = new javax.swing.GroupLayout(parentProfilePanel);
        parentProfilePanel.setLayout(parentProfilePanelLayout);
        parentProfilePanelLayout.setHorizontalGroup(
            parentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentProfilePanelLayout.createSequentialGroup()
                .addGroup(parentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parentProfilePanelLayout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(parentCrudtextLabel1))
                    .addGroup(parentProfilePanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(parentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, parentProfilePanelLayout.createSequentialGroup()
                                .addComponent(emailParentProfileLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(emailParentProfileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, parentProfilePanelLayout.createSequentialGroup()
                                .addComponent(addressParentProfileLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                .addComponent(addressParentProfileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(parentProfilePanelLayout.createSequentialGroup()
                                .addComponent(firstNameProfileTextLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(profileFirstNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(88, 88, 88)
                        .addGroup(parentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameProfileLabel)
                            .addComponent(contactNumberParentProfileLabel))
                        .addGap(22, 22, 22)
                        .addGroup(parentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameProfileTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactNoParentProfileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(parentProfilePanelLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(editParentButton1)
                        .addGap(107, 107, 107)
                        .addComponent(updateParentButton1)))
                .addContainerGap(148, Short.MAX_VALUE))
        );
        parentProfilePanelLayout.setVerticalGroup(
            parentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentProfilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(parentCrudtextLabel1)
                .addGap(82, 82, 82)
                .addGroup(parentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameProfileTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameProfileLabel)
                    .addComponent(profileFirstNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameProfileTextLabel1))
                .addGap(29, 29, 29)
                .addGroup(parentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailParentProfileLabel)
                    .addComponent(emailParentProfileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactNumberParentProfileLabel)
                    .addComponent(contactNoParentProfileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(parentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressParentProfileLabel)
                    .addComponent(addressParentProfileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(parentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editParentButton1)
                    .addComponent(updateParentButton1))
                .addContainerGap(309, Short.MAX_VALUE))
        );

        rightParentPanel.add(parentProfilePanel, "card4");

        parentSplitPane.setRightComponent(rightParentPanel);

        leftParentPanel.setBackground(new java.awt.Color(153, 153, 153));
        leftParentPanel.setPreferredSize(new java.awt.Dimension(120, 595));

        profileButton.setText("Profile");
        profileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileButtonActionPerformed(evt);
            }
        });

        parentDashboardButton.setText("DashBoard");
        parentDashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentDashboardButtonActionPerformed(evt);
            }
        });

        schoolReportButton.setText("School Report");
        schoolReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolReportButtonActionPerformed(evt);
            }
        });

        feedbackButton.setText("Feedback");
        feedbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedbackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftParentPanelLayout = new javax.swing.GroupLayout(leftParentPanel);
        leftParentPanel.setLayout(leftParentPanelLayout);
        leftParentPanelLayout.setHorizontalGroup(
            leftParentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftParentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftParentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(schoolReportButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(leftParentPanelLayout.createSequentialGroup()
                        .addGroup(leftParentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(parentDashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(feedbackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftParentPanelLayout.setVerticalGroup(
            leftParentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftParentPanelLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(parentDashboardButton)
                .addGap(41, 41, 41)
                .addComponent(profileButton)
                .addGap(43, 43, 43)
                .addComponent(schoolReportButton)
                .addGap(36, 36, 36)
                .addComponent(feedbackButton)
                .addContainerGap(252, Short.MAX_VALUE))
        );

        parentSplitPane.setLeftComponent(leftParentPanel);

        javax.swing.GroupLayout parentPanelLayout = new javax.swing.GroupLayout(parentPanel);
        parentPanel.setLayout(parentPanelLayout);
        parentPanelLayout.setHorizontalGroup(
            parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentPanelLayout.createSequentialGroup()
                .addComponent(parentSplitPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        parentPanelLayout.setVerticalGroup(
            parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentPanelLayout.createSequentialGroup()
                .addComponent(parentSplitPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bottomPanel.add(parentPanel, "card3");

        studentPanel.setPreferredSize(new java.awt.Dimension(700, 595));

        studentSplitPane.setDividerLocation(120);
        studentSplitPane.setPreferredSize(new java.awt.Dimension(700, 595));

        rightStudentPanel.setLayout(new java.awt.CardLayout());

        studentDashboard1.setPreferredSize(new java.awt.Dimension(644, 595));

        studentDashboardLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        studentDashboardLabel3.setText("DASHBOARD");

        imgOne.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("file:/C:/Users/jalan/Desktop/INFO%205100%20Final%20Project/SummerCampManagement/src/main/java/com/Northeastern/SummerCampManagement/View/Camp3_new.jpg")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());
        imgOne.setToolTipText("");
        imgOne.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        studentDashboardLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        studentDashboardLabel5.setText("Register For UpComing Events");

        javax.swing.GroupLayout studentDashboard1Layout = new javax.swing.GroupLayout(studentDashboard1);
        studentDashboard1.setLayout(studentDashboard1Layout);
        studentDashboard1Layout.setHorizontalGroup(
            studentDashboard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDashboard1Layout.createSequentialGroup()
                .addGroup(studentDashboard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentDashboard1Layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(imgThree))
                    .addGroup(studentDashboard1Layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(studentDashboardLabel3))
                    .addGroup(studentDashboard1Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(studentDashboardLabel5))
                    .addGroup(studentDashboard1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(imgOne, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        studentDashboard1Layout.setVerticalGroup(
            studentDashboard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentDashboard1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(studentDashboardLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imgThree)
                .addGap(43, 43, 43)
                .addComponent(studentDashboardLabel5)
                .addGap(29, 29, 29)
                .addComponent(imgOne, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156))
        );

        javax.swing.GroupLayout studentDashboardLayout = new javax.swing.GroupLayout(studentDashboard);
        studentDashboard.setLayout(studentDashboardLayout);
        studentDashboardLayout.setHorizontalGroup(
            studentDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDashboardLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(studentDashboard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(852, 852, 852))
        );
        studentDashboardLayout.setVerticalGroup(
            studentDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDashboardLayout.createSequentialGroup()
                .addGap(0, 492, Short.MAX_VALUE)
                .addComponent(studentDashboard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 493, Short.MAX_VALUE))
        );

        rightStudentPanel.add(studentDashboard, "card2");

        studentProfilePanel.setPreferredSize(new java.awt.Dimension(599, 595));

        parentCrudtextLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        parentCrudtextLabel2.setText("PROFILE");

        firstNameProfileLabel.setText("First Name");

        lastNameStudentProfileLabel.setText("Last Name");

        emailStudentProfileLabel.setText("Email");

        contactNumberStudentProfileLabel.setText("Contact Number");

        addressStudentProfileLabel.setText("Address");

        jLabel4.setText("Age");

        emailStudentTextLabel.setText("jLabel7");

        studentFirstNameTextLabel.setText("jLabel8");

        AddressStudentTextLabel.setText("jLabel7");

        lastNameStudentText.setText("jLabel7");

        ContactNumberStudentText.setText("jLabel7");

        AgeStudentText.setText("jLabel7");

        javax.swing.GroupLayout studentProfilePanelLayout = new javax.swing.GroupLayout(studentProfilePanel);
        studentProfilePanel.setLayout(studentProfilePanelLayout);
        studentProfilePanelLayout.setHorizontalGroup(
            studentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentProfilePanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(studentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNameProfileLabel)
                    .addComponent(emailStudentProfileLabel)
                    .addComponent(addressStudentProfileLabel))
                .addGap(58, 58, 58)
                .addGroup(studentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentProfilePanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentFirstNameTextLabel))
                    .addComponent(AddressStudentTextLabel)
                    .addComponent(emailStudentTextLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addGroup(studentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contactNumberStudentProfileLabel)
                    .addComponent(jLabel4)
                    .addComponent(lastNameStudentProfileLabel))
                .addGap(18, 18, 18)
                .addGroup(studentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastNameStudentText)
                    .addComponent(AgeStudentText)
                    .addComponent(ContactNumberStudentText))
                .addGap(23, 168, Short.MAX_VALUE))
            .addGroup(studentProfilePanelLayout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(parentCrudtextLabel2)
                .addGap(48, 48, 48))
        );
        studentProfilePanelLayout.setVerticalGroup(
            studentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentProfilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(parentCrudtextLabel2)
                .addGap(85, 85, 85)
                .addGroup(studentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameStudentProfileLabel)
                    .addComponent(firstNameProfileLabel)
                    .addComponent(jLabel6)
                    .addComponent(studentFirstNameTextLabel)
                    .addComponent(lastNameStudentText))
                .addGap(35, 35, 35)
                .addGroup(studentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailStudentProfileLabel)
                    .addComponent(contactNumberStudentProfileLabel)
                    .addComponent(emailStudentTextLabel)
                    .addComponent(ContactNumberStudentText))
                .addGap(32, 32, 32)
                .addGroup(studentProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressStudentProfileLabel)
                    .addComponent(jLabel4)
                    .addComponent(AddressStudentTextLabel)
                    .addComponent(AgeStudentText))
                .addContainerGap(369, Short.MAX_VALUE))
        );

        rightStudentPanel.add(studentProfilePanel, "card4");

        schoolReportLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        schoolReportLabel1.setText("SCHOOL REPORT");

        jLabel7.setText("Attendance");

        jLabel8.setText("Overall Grade");

        AttendancestudentText.setText("jLabel9");

        gradeStudentText.setText("jLabel10");

        javax.swing.GroupLayout studentschoolReportPanelLayout = new javax.swing.GroupLayout(studentschoolReportPanel);
        studentschoolReportPanel.setLayout(studentschoolReportPanelLayout);
        studentschoolReportPanelLayout.setHorizontalGroup(
            studentschoolReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentschoolReportPanelLayout.createSequentialGroup()
                .addGroup(studentschoolReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentschoolReportPanelLayout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(schoolReportLabel1))
                    .addGroup(studentschoolReportPanelLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(studentschoolReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(125, 125, 125)
                        .addGroup(studentschoolReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AttendancestudentText)
                            .addComponent(gradeStudentText))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        studentschoolReportPanelLayout.setVerticalGroup(
            studentschoolReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentschoolReportPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(schoolReportLabel1)
                .addGap(41, 41, 41)
                .addGroup(studentschoolReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(AttendancestudentText))
                .addGap(39, 39, 39)
                .addGroup(studentschoolReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(gradeStudentText))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rightStudentPanel.add(studentschoolReportPanel, "card5");

        campReportLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        campReportLabel1.setText("CAMP REGISTRATION");

        studentMealPrefLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        studentMealPrefLabel1.setText("Meal Preference");

        addCampRegistrationButton.setText("SUBMIT");
        addCampRegistrationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCampRegistrationButtonActionPerformed(evt);
            }
        });

        campRegistrationUserName.setText("User Name");

        campRegistrationPassword.setText("Password");

        studentCampPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentCampPasswordActionPerformed(evt);
            }
        });

        studentCampUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentCampUsernameActionPerformed(evt);
            }
        });

        beveragePreference.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Juice", "Coke" }));

        campRegistrationBeverageLabel.setText("Beverage Preference");

        campRegistrationFoodLabel.setText("Food Preference");

        campRegistrationAllergiesLabel.setText("Allergies");

        foodPreferences.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vegetarian", "Non Vegetarian", "Vegan" }));
        foodPreferences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodPreferencesActionPerformed(evt);
            }
        });

        campRegistrationMedCondition.setText("Medical Conditions");

        allergies.setColumns(20);
        allergies.setRows(5);
        jScrollPane4.setViewportView(allergies);

        medicalConditions.setColumns(20);
        medicalConditions.setRows(5);
        jScrollPane5.setViewportView(medicalConditions);

        javax.swing.GroupLayout studentCampRegistrationPanelLayout = new javax.swing.GroupLayout(studentCampRegistrationPanel);
        studentCampRegistrationPanel.setLayout(studentCampRegistrationPanelLayout);
        studentCampRegistrationPanelLayout.setHorizontalGroup(
            studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentCampRegistrationPanelLayout.createSequentialGroup()
                .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentCampRegistrationPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(campRegistrationPassword)
                                .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(beveragePreference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(foodPreferences, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))
                    .addGroup(studentCampRegistrationPanelLayout.createSequentialGroup()
                        .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentCampRegistrationPanelLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(campRegistrationUserName))
                            .addGroup(studentCampRegistrationPanelLayout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(campRegistrationFoodLabel)
                                    .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(campRegistrationBeverageLabel)
                                        .addComponent(studentMealPrefLabel1))
                                    .addComponent(campRegistrationAllergiesLabel)
                                    .addComponent(campRegistrationMedCondition))
                                .addGap(33, 33, 33)
                                .addComponent(studentCampUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(studentCampPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addGroup(studentCampRegistrationPanelLayout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(addCampRegistrationButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentCampRegistrationPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(campReportLabel1)
                .addGap(226, 226, 226))
        );
        studentCampRegistrationPanelLayout.setVerticalGroup(
            studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentCampRegistrationPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(campReportLabel1)
                .addGap(44, 44, 44)
                .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentCampUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campRegistrationUserName)
                    .addComponent(campRegistrationPassword)
                    .addComponent(studentCampPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(studentMealPrefLabel1)
                .addGap(14, 14, 14)
                .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(beveragePreference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campRegistrationBeverageLabel))
                .addGap(23, 23, 23)
                .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodPreferences, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campRegistrationFoodLabel))
                .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentCampRegistrationPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(campRegistrationAllergiesLabel))
                    .addGroup(studentCampRegistrationPanelLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addGroup(studentCampRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campRegistrationMedCondition)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(addCampRegistrationButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        rightStudentPanel.add(studentCampRegistrationPanel, "card6");

        studentSplitPane.setRightComponent(rightStudentPanel);

        leftStudentPanel.setBackground(new java.awt.Color(153, 153, 153));
        leftStudentPanel.setPreferredSize(new java.awt.Dimension(120, 595));

        studentProfileButton.setText("Profile");
        studentProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentProfileButtonActionPerformed(evt);
            }
        });

        studentDashboardButton.setText("DashBoard");
        studentDashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDashboardButtonActionPerformed(evt);
            }
        });

        studentCampRegButton.setText("Camp  Registration");
        studentCampRegButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentCampRegButtonActionPerformed(evt);
            }
        });

        studentReportButton.setText("Report");
        studentReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentReportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftStudentPanelLayout = new javax.swing.GroupLayout(leftStudentPanel);
        leftStudentPanel.setLayout(leftStudentPanelLayout);
        leftStudentPanelLayout.setHorizontalGroup(
            leftStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentDashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentCampRegButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentReportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftStudentPanelLayout.setVerticalGroup(
            leftStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftStudentPanelLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(studentDashboardButton)
                .addGap(41, 41, 41)
                .addComponent(studentProfileButton)
                .addGap(36, 36, 36)
                .addComponent(studentReportButton)
                .addGap(38, 38, 38)
                .addComponent(studentCampRegButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentSplitPane.setLeftComponent(leftStudentPanel);

        javax.swing.GroupLayout studentPanelLayout = new javax.swing.GroupLayout(studentPanel);
        studentPanel.setLayout(studentPanelLayout);
        studentPanelLayout.setHorizontalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addComponent(studentSplitPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        studentPanelLayout.setVerticalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addComponent(studentSplitPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bottomPanel.add(studentPanel, "card4");

        schoolSplitPane.setRightComponent(bottomPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(schoolSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(schoolSplitPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed

    private void studentCrudButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentCrudButtonActionPerformed
        // TODO add your handling code here:
        rightPanel.removeAll();
        rightPanel.add(studentCrudPanel);
        rightPanel.repaint();
        rightPanel.revalidate();
        
        try {
            // TODO add your handling code here:

        parentList = (ArrayList)this.parentService.getAllParents();
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        parentIDs.clear();
        for(Parent i : parentList)
       {
         parentIDs.add(i.getUserId());
       }
        DefaultComboBoxModel parentComboModel = new DefaultComboBoxModel();
        parentComboModel.addAll(parentIDs);
        selectParentComboBox.setModel(parentComboModel);
        selectParentComboBox.setSelectedIndex(0);
        
          //load the student info to jtable
        DefaultTableModel studentModel = (DefaultTableModel)studentInfoTable.getModel();
        studentModel.setRowCount(0);
        Object rowData[] = new Object[8]; 
        
        try {
            studentList = (ArrayList)this.studentService.getAllStudents();
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for(int j = 0; j < studentList.size(); j++)
        {
        rowData[0] = studentList.get(j).getUserId();
        rowData[1] = studentList.get(j).getFirstName();
        rowData[2] = studentList.get(j).getLastName();
        rowData[3] = studentList.get(j).getContactNumber();
        rowData[4] = studentList.get(j).getEmail();
        rowData[5] = studentList.get(j).getAge();
        rowData[6] = studentList.get(j).getAddress();
        rowData[7] = new JButton("Action");    
       
        studentModel.addRow(rowData);
        }
        
        TableActionEvent event = new TableActionEvent() {
            @Override
            public void onSave(int row) {
               String contactNo = studentModel.getValueAt(row, 3).toString();
                studentList.get(row).setContactNumber(contactNo);
                String email = studentModel.getValueAt(row, 4).toString();
                studentList.get(row).setEmail(email);
                String address = studentModel.getValueAt(row, 6).toString();
                studentList.get(row).setAddress(address);
                
                Student student = new Student();
                try {
                    student = studentService.getStudentById(Integer.valueOf(studentModel.getValueAt(row, 0).toString()));
                    student.setContactNumber(contactNo);
                    student.setEmail(email);
                    student.setAddress(address);
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    studentService.updateStudentById(Integer.valueOf(studentModel.getValueAt(row, 0).toString()),student );
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void onDelete(int row) {
                
                 if(studentInfoTable.isEditing()){
                    studentInfoTable.getCellEditor().stopCellEditing();
                }

                try {
                    String deleteStudentById = studentService.deleteStudentById(Integer.valueOf(studentModel.getValueAt(row, 0).toString()));
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                                studentModel.removeRow(row);
                studentList.remove(row);
            }
        };
        studentInfoTable.getColumnModel().getColumn(7).setCellRenderer(new TableActionCellRender());
        studentInfoTable.getColumnModel().getColumn(7).setCellEditor(new TableActionCellEditor(event));
    }//GEN-LAST:event_studentCrudButtonActionPerformed

    private void schoolReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolReportButtonActionPerformed
        // TODO add your handling code here:
        rightParentPanel.removeAll();
        rightParentPanel.add(schoolReportPanel);
        rightParentPanel.repaint();
        rightParentPanel.revalidate();
        //student by parentid
         DefaultTableModel studentModel = (DefaultTableModel)schoolReportTable.getModel();
        studentModel.setRowCount(0);
        Object rowData[] = new Object[3]; 
        
        try {
            studentList = (ArrayList)this.studentService.getAllStudents();
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for(int j = 0; j < studentList.size(); j++)
        {
     
        rowData[0] = studentList.get(j).getFirstName() + " " + studentList.get(j).getLastName();
        rowData[1] = studentList.get(j).getAttendance();
        rowData[2] = studentList.get(j).getGrade();
       
        studentModel.addRow(rowData);
        }
    }//GEN-LAST:event_schoolReportButtonActionPerformed

    private void parentDashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentDashboardButtonActionPerformed
        // TODO add your handling code here:
        rightParentPanel.removeAll();
        rightParentPanel.add(parentDashboard);
        rightParentPanel.repaint();
        rightParentPanel.revalidate();
        
          try {
                    studentList = (ArrayList<Student>) studentService.getAllStudents();
                } 
                catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                DefaultTableModel parentModel = (DefaultTableModel)parentDashboardStudentTable.getModel();
                parentModel.setRowCount(0);
                Object rowData[] = new Object[4]; 


                for(int j = 0; j < studentList.size(); j++)
                {
                rowData[0] = studentList.get(j).getUserId();
                rowData[1] = studentList.get(j).getFirstName() + " " + studentList.get(j).getLastName();
                rowData[2] = studentList.get(j).getAge();
                rowData[3] = studentList.get(j).getCamper();


                parentModel.addRow(rowData);

                }
        
    }//GEN-LAST:event_parentDashboardButtonActionPerformed

    private void studentDashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDashboardButtonActionPerformed
        // TODO add your handling code here:
        rightStudentPanel.removeAll();
        rightStudentPanel.add(studentDashboard);
        rightStudentPanel.repaint();
        rightStudentPanel.revalidate();
    }//GEN-LAST:event_studentDashboardButtonActionPerformed

    private void studentCampPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentCampPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentCampPasswordActionPerformed

    private void studentCampUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentCampUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentCampUsernameActionPerformed

    private void addCampRegistrationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCampRegistrationButtonActionPerformed
        // TODO add your handling code here:
        
        
        student.setUsername(studentCampUsername.getText());
        student.setPassword(studentCampPassword.getText());
        if(beveragePreference.getSelectedItem().toString() == "Juice"){
            mealPreference.setBeveragePreferance(MealPreference.Beverage.juice);
        }
        else {
         mealPreference.setBeveragePreferance(MealPreference.Beverage.coke);
        }
        
        if(foodPreferences.getSelectedItem().toString() == "Vegetarian"){
            mealPreference.setFoodPreference(MealPreference.FoodPreference.vegetarian);
        }
        else if(foodPreferences.getSelectedItem().toString() == "Non Vegetarian") {
          mealPreference.setFoodPreference(MealPreference.FoodPreference.nonvegetarian);
        }
        else{
         mealPreference.setFoodPreference(MealPreference.FoodPreference.vegan);
        }
        mealPreference.setAllergies(allergies.getText());
        mealPreference.setMedicalConditions(medicalConditions.getText());
        
        try {
            studentService.campRegister(loggedInUserId, student.getUsername(), student.getPassword(), mealPreference);
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        studentCampUsername.setText(" ");
        studentCampPassword.setText(" ");
        allergies.setText(" ");
        medicalConditions.setText(" ");
        
        JOptionPane.showMessageDialog(this, "Registered successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_addCampRegistrationButtonActionPerformed

    private void loginSchoolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginSchoolButtonActionPerformed
        // TODO add your handling code here:
        
        // Create new admin
//       SchoolAdmin newAdmin = new SchoolAdmin();
//        newAdmin.setUsername("Schooladmin");
//        newAdmin.setPassword("admin@123");
//       newAdmin.setRole(AppUser.Role.SchoolAdmin);
//       try {          
//           schoolAdminService.addSchoolAdmin(newAdmin);
//      } catch (CustomException ex) {
//           Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
//       }
        
        /// Admin Created //
        
        if(roleSchoolDropBox.getSelectedItem().toString()== "admin"){
          // SchoolAdmin isLoggedIn = new SchoolAdmin();
            try {
                schoolAdmin = schoolAdminService.loginByAdminId(usernameSchoolTextField.getText(), passwordSchoolTextField.getText());
               
            } catch (CustomException ex) {
                Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(schoolAdmin.getUserId() == null){
                System.out.println(schoolAdmin.getUserId());
               
                JOptionPane.showMessageDialog(this, "Incorrect Username or Password", "Failed", JOptionPane.INFORMATION_MESSAGE);
            }
            else {



                schoolSplitPane.setVisible(true);
                topPanel.setVisible(true);
                bottomPanel.setVisible(true);

                loginPanel.setVisible(false);
                bottomPanel.removeAll();
                bottomPanel.add(adminPanel);
                bottomPanel.repaint();
                bottomPanel.revalidate();

                jSplitPane2.setVisible(true);
                leftPanel.setVisible(true);
                rightPanel.setVisible(true);

                rightPanel.removeAll();
                rightPanel.add(adminDashboard);
                rightPanel.repaint();
                rightPanel.revalidate();
                titleLabel.setText("Admin");
        }
            try {
                // OnPageLoad
                parentList = (ArrayList)this.parentService.getAllParents();
                studentList = (ArrayList<Student>) this.studentService.getAllStudents();
               
                parentsTextLabel.setText(String.valueOf(parentList.size()));
                studentTextLabel.setText(String.valueOf(studentList.size()));
              
               
                      
            } catch (CustomException ex) {
                Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else if(roleSchoolDropBox.getSelectedItem().toString()=="parent"){
           
            try {
                parent = parentService.loginByParentId(usernameSchoolTextField.getText(), passwordSchoolTextField.getText());
            } catch (CustomException ex) {
                Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if(parent.getUserId() == null){
                System.out.println(parent.getUserId());
                
                 JOptionPane.showMessageDialog(this, "Incorrect Username or Password", "Failed", JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                    loggedInUserId = parent.getUserId();
                    schoolSplitPane.setVisible(true);
                    topPanel.setVisible(true);
                    bottomPanel.setVisible(true);
                    loginPanel.setVisible(false);
                    bottomPanel.removeAll();
                    bottomPanel.add(parentPanel);
                    bottomPanel.repaint();
                    bottomPanel.revalidate();

                    parentSplitPane.setVisible(true);
                    leftParentPanel.setVisible(true);
                    rightParentPanel.setVisible(true);

                    rightParentPanel.removeAll();
                    rightParentPanel.add(parentDashboard);
                    rightParentPanel.repaint();
                    rightParentPanel.revalidate();
                    titleLabel.setText("Parent");
                try {
                    studentList = (ArrayList<Student>) studentService.getAllStudents();
                } 
                catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                DefaultTableModel parentModel = (DefaultTableModel)parentDashboardStudentTable.getModel();
                parentModel.setRowCount(0);
                Object rowData[] = new Object[4]; 


                for(int j = 0; j < studentList.size(); j++)
                {
                rowData[0] = studentList.get(j).getUserId(); 
                rowData[1] = studentList.get(j).getFirstName() + " " + studentList.get(j).getLastName();
                rowData[2] = studentList.get(j).getAge();
                rowData[3] = studentList.get(j).getCamper();


                parentModel.addRow(rowData);

                }
            }
        }
        
        else{
         try {
                student = studentService.loginByStudentId(usernameSchoolTextField.getText(), passwordSchoolTextField.getText());
            } catch (CustomException ex) {
                Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if(student.getUserId() == null){
                System.out.println(student.getUserId());
                JOptionPane.showMessageDialog(this, "Incorrect Username or Password", "Failed", JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {  
                loggedInUserId = student.getUserId(); 
                
                schoolSplitPane.setVisible(true);
                topPanel.setVisible(true);
                bottomPanel.setVisible(true);
                loginPanel.setVisible(false);
                bottomPanel.removeAll();
                bottomPanel.add(studentPanel);
                bottomPanel.repaint();
                bottomPanel.revalidate();
                studentSplitPane.setVisible(true);
                leftStudentPanel.setVisible(true);
                rightStudentPanel.setVisible(true);

                rightStudentPanel.removeAll();
                rightStudentPanel.add(studentDashboard);
                rightStudentPanel.repaint();
                rightStudentPanel.revalidate();
                titleLabel.setText("Student");
                
//                URL imageURL = getClass().getResource("Camp1.jpg");
//                if (imageURL != null) {
//                ImageIcon icon1 = new ImageIcon(imageURL);
//                imgOne.setIcon(icon1);
//                } else {
//                System.err.println("Image file Camp1.jpg not found.");
//                }

                   ImageIcon imageIcon = new ImageIcon("Camp1.jpg");
            Image image = imageIcon.getImage().getScaledInstance(60, 50, Image.SCALE_SMOOTH);
             imgOne = new JLabel(new ImageIcon(image));
//                 ImageIcon icon1 = new ImageIcon(getClass().getResource("Camp1.jpg"));
           
//                 ImageIcon icon2 = new ImageIcon("Camp2.png");
//                 ImageIcon icon3 = new ImageIcon("Camp3.jpg");
//                 
//                 imgOne.setIcon(icon1);
//                 imgTwo.setIcon(icon2);
//                 imgThree.setIcon(icon3);
            }
        }
        
        
        
    }//GEN-LAST:event_loginSchoolButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        
        schoolSplitPane.setVisible(false);
        topPanel.setVisible(false);
        bottomPanel.setVisible(false);
        loginPanel.setVisible(true);
        
        usernameSchoolTextField.setText("");
        passwordSchoolTextField.setText("");
        
        
        
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void createParentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createParentButtonActionPerformed
        // TODO add your handling code here:
        boolean validInput = true;
        if(!isValidName(parentFirstNameField.getText()))
        {
            validInput = false;
            JOptionPane.showMessageDialog(this, "Please check the firstname input."  );
        }
        else if (!isValidName(lastNameParentTextfield.getText()))
        {
            validInput = false;
            JOptionPane.showMessageDialog(this, "Please check the lastname input."  );
            
        }
        else if (!isValidEmail(emailParentTextField.getText()))
        {
            validInput = false;
            JOptionPane.showMessageDialog(this, "Please check the lastname input."  );
        }
        else if(!isValidPhoneNumber(contactNumberParentTextField.getText()))
        {
            validInput = false;
            JOptionPane.showMessageDialog(this, "Please check the contact number input."  ); 
        }
        else if(!isValidAddress(addressParentTextField.getText()))   
        {
              validInput = false;
            JOptionPane.showMessageDialog(this, "Please check the address input."  ); 
        }
        if(validInput){
            
        parent.setUserId(null);
        parent.setFirstName(parentFirstNameField.getText());
        parent.setLastName(lastNameParentTextfield.getText());
        parent.setEmail(emailParentTextField.getText());
        parent.setContactNumber(contactNumberParentTextField.getText());
        parent.setAddress(addressParentTextField.getText());
        parent.setUsername(emailParentTextField.getText());
        parent.setPassword(contactNumberParentTextField.getText());
        parent.setRole(AppUser.Role.Parent);
     
        try {
            this.parentService.addParent(parent);
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         //clear the text fields
         parentFirstNameField.setText("");
         lastNameParentTextfield.setText("");
         emailParentTextField.setText("");
         contactNumberParentTextField.setText("");
         addressParentTextField.setText("");
         
        
         //load the parent info to jtable
        DefaultTableModel parentModel = (DefaultTableModel)parentInfoTable.getModel();
        parentModel.setRowCount(0);
        Object rowData[] = new Object[7]; 
        
            try {
                parentList = (ArrayList)this.parentService.getAllParents();
            } catch (CustomException ex) {
                Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        for(int i = 0; i < parentList.size(); i++)
        {
            rowData[0] = parentList.get(i).getUserId();
            rowData[1] = parentList.get(i).getFirstName();
            rowData[2] = parentList.get(i).getLastName();
            rowData[3] = parentList.get(i).getEmail();
            rowData[4] = parentList.get(i).getAddress();
            rowData[5] = parentList.get(i).getContactNumber();      
            rowData[6] = new JButton("Action");
            parentModel.addRow(rowData);
        }
        //Add action buttons to table
          TableActionEvent event = new TableActionEvent() {
            @Override
            public void onSave(int row) {
               String contactNo = parentModel.getValueAt(row, 5).toString();
                parentList.get(row).setContactNumber(contactNo);
                String email = parentModel.getValueAt(row, 3).toString();
                parentList.get(row).setEmail(email);
                String address = parentModel.getValueAt(row, 4).toString();
                parentList.get(row).setAddress(address);
                
                Parent parentInfo = new Parent();
                try {
                    parentInfo = parentService.getParentById(Integer.valueOf(parentModel.getValueAt(row, 0).toString()));
                    parentInfo.setContactNumber(contactNo);
                    parentInfo.setEmail(email);
                    parentInfo.setAddress(address);
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    parentService.updateParentById(Integer.valueOf(parentModel.getValueAt(row, 0).toString()),parentInfo );
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void onDelete(int row) {
                
                 if(parentInfoTable.isEditing()){
                    parentInfoTable.getCellEditor().stopCellEditing();
                }

                try {
                    String deletParentById = parentService.deleteParentById(Integer.valueOf(parentModel.getValueAt(row, 0).toString()));
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                parentModel.removeRow(row);
                parentList.remove(row);
            }
        };
        parentInfoTable.getColumnModel().getColumn(6).setCellRenderer(new TableActionCellRender());
        parentInfoTable.getColumnModel().getColumn(6).setCellEditor(new TableActionCellEditor(event));
        //end of addition
        }   
                
        
    }//GEN-LAST:event_createParentButtonActionPerformed

    private void emailParentTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailParentTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailParentTextFieldActionPerformed

    private void dashboardButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardButton1ActionPerformed
        // TODO add your handling code here:
        rightPanel.removeAll();
        rightPanel.add(adminDashboard);
        rightPanel.repaint();
        rightPanel.revalidate();
       // Load data
         try {
                
                parentList = (ArrayList)this.parentService.getAllParents();
                studentList = (ArrayList<Student>) this.studentService.getAllStudents();
               
                parentsTextLabel.setText(String.valueOf(parentList.size()));
                studentTextLabel.setText(String.valueOf(studentList.size()));
              
               
                      
            } catch (CustomException ex) {
                Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_dashboardButton1ActionPerformed

    private void parentCrudButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentCrudButtonActionPerformed
        // TODO add your handling code here:
        rightPanel.removeAll();
        rightPanel.add(parentCrudPanel);
        rightPanel.repaint();
        rightPanel.revalidate();
        
         //load the parent info to jtable
        DefaultTableModel parentModel = (DefaultTableModel)parentInfoTable.getModel();
        parentModel.setRowCount(0);
        Object rowData[] = new Object[7]; 
        
        try {
            parentList = (ArrayList)this.parentService.getAllParents();
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for(int i = 0; i < parentList.size(); i++)
        {
            rowData[0] = parentList.get(i).getUserId();
            rowData[1] = parentList.get(i).getFirstName();
            rowData[2] = parentList.get(i).getLastName();
            rowData[3] = parentList.get(i).getEmail();
            rowData[4] = parentList.get(i).getAddress();
            rowData[5] = parentList.get(i).getContactNumber();      
            rowData[6] = new JButton("Action");
            parentModel.addRow(rowData);
        }
        //Add action buttons to table
          TableActionEvent event = new TableActionEvent() {
            @Override
            public void onSave(int row) {
               String contactNo = parentModel.getValueAt(row, 5).toString();
                parentList.get(row).setContactNumber(contactNo);
                String email = parentModel.getValueAt(row, 3).toString();
                parentList.get(row).setEmail(email);
                String address = parentModel.getValueAt(row, 4).toString();
                parentList.get(row).setAddress(address);
                
                Parent parentInfo = new Parent();
                try {
                    parentInfo = parentService.getParentById(Integer.valueOf(parentModel.getValueAt(row, 0).toString()));
                    parentInfo.setContactNumber(contactNo);
                    parentInfo.setEmail(email);
                    parentInfo.setAddress(address);
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    parentService.updateParentById(Integer.valueOf(parentModel.getValueAt(row, 0).toString()),parentInfo );
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void onDelete(int row) {
                
                 if(parentInfoTable.isEditing()){
                    parentInfoTable.getCellEditor().stopCellEditing();
                }

                try {
                    String deletParentById = parentService.deleteParentById(Integer.valueOf(parentModel.getValueAt(row, 0).toString()));
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                parentModel.removeRow(row);
                parentList.remove(row);
            }
        };
        parentInfoTable.getColumnModel().getColumn(6).setCellRenderer(new TableActionCellRender());
        parentInfoTable.getColumnModel().getColumn(6).setCellEditor(new TableActionCellEditor(event));
        //end of addition
    }//GEN-LAST:event_parentCrudButtonActionPerformed

    private void profileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileButtonActionPerformed
        // TODO add your handling code here:
        rightParentPanel.removeAll();
        rightParentPanel.add(parentProfilePanel);
        rightParentPanel.repaint();
        rightParentPanel.revalidate();
        try {
            parent = parentService.getParentById(loggedInUserId);
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        profileFirstNameTextfield.setText(parent.getFirstName());
        profileFirstNameTextfield.setEnabled(false);
        lastNameProfileTextfield.setText(parent.getLastName());
        lastNameProfileTextfield.setEnabled(false);
        emailParentProfileTextField.setText(parent.getEmail());
        emailParentProfileTextField.setEnabled(false);
        contactNoParentProfileTextField.setText(parent.getContactNumber());
        contactNoParentProfileTextField.setEnabled(false);
        addressParentProfileTextField.setText(parent.getAddress());
        addressParentProfileTextField.setEnabled(false);
        studentList = (ArrayList<Student>) parent.getStudent();
       
        
    }//GEN-LAST:event_profileButtonActionPerformed

    private void feedbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedbackButtonActionPerformed
        // TODO add your handling code here:
        rightParentPanel.removeAll();
        rightParentPanel.add(parentFeedbackPanel);
        rightParentPanel.repaint();
        rightParentPanel.revalidate();
    }//GEN-LAST:event_feedbackButtonActionPerformed

    private void studentProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentProfileButtonActionPerformed
        // TODO add your handling code here:
        // Setting up the view
        rightStudentPanel.removeAll();
        rightStudentPanel.add(studentProfilePanel);
        rightStudentPanel.repaint();
        rightStudentPanel.revalidate();
        //LoadData
        try {
        
            student = studentService.getStudentById(loggedInUserId);
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        studentFirstNameTextLabel.setText(student.getFirstName());
        lastNameStudentText.setText(student.getLastName());
        emailStudentTextLabel.setText(student.getEmail());
        ContactNumberStudentText.setText(student.getContactNumber());
        AddressStudentTextLabel.setText(student.getAddress());
       AgeStudentText.setText(student.getAge().toString());
        
        
        
    }//GEN-LAST:event_studentProfileButtonActionPerformed

    private void studentReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentReportButtonActionPerformed
        // TODO add your handling code here:
        // Setting up the view
        rightStudentPanel.removeAll();
        rightStudentPanel.add(studentschoolReportPanel);
        rightStudentPanel.repaint();
        rightStudentPanel.revalidate();
        //LoadData
        
         try {
        
            student = studentService.getStudentById(loggedInUserId);
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        AttendancestudentText.setText(student.getAttendance());
        gradeStudentText.setText(student.getGrade());
        
        
    }//GEN-LAST:event_studentReportButtonActionPerformed

    private void studentCampRegButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentCampRegButtonActionPerformed
        // TODO add your handling code here:
        rightStudentPanel.removeAll();
        rightStudentPanel.add(studentCampRegistrationPanel);
        rightStudentPanel.repaint();
        rightStudentPanel.revalidate();
    }//GEN-LAST:event_studentCampRegButtonActionPerformed

    
    private void downloadReport(JTable table, String reportName) {         
        // Create Workbook and Sheet
       try { 
        
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("Report");
             
            XSSFRow headerRow= sheet.createRow(0);        
            for(int i= 0; i < table.getColumnCount(); i++) {
                headerRow.createCell(i).setCellValue(table.getColumnName(i));         
            }
            // Write data from JTable to Excel
            for (int i = 0; i < table.getRowCount(); i++) {
            XSSFRow row = sheet.createRow(i+1);
            for (int j = 0; j < table.getColumnCount(); j++) {
                Object value = table.getValueAt(i, j);
                if(value == null)
                {
                    value = "";
                }
                row.createCell(j).setCellValue(value.toString());                
            }             
        }            
        // Save workbook to file
        FileOutputStream outputStream = new FileOutputStream( reportName + ".xlsx");             
        workbook.write(outputStream);             
        workbook.close();             
        outputStream.close();             
        JOptionPane.showMessageDialog(this, "Report downloaded successfully!");         
    } 
    catch (IOException e) {
        e.printStackTrace();            
        JOptionPane.showMessageDialog(this, "Error downloading report: " + e.getMessage());         
        }     
    }

    
    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
       Boolean validInput = true;
       Integer parentId  = Integer.parseInt(selectParentComboBox.getSelectedItem().toString());
        if(!isValidName(firstNameTextField.getText()))
        {
            validInput = false;
            JOptionPane.showMessageDialog(this, "Invalid First Name. Please update and resubmit."  );
        }
        else if(!isValidName(lastNameTextField.getText()))
        {
            validInput = false;
            JOptionPane.showMessageDialog(this, "Invalid Last Name. Please update and resubmit."  );
        }
        else if(!isValidEmail(emailTextField.getText()))
        {
            validInput = false;
            JOptionPane.showMessageDialog(this, "Invalid Email. Please update and resubmit."  );
        }
        else if(!isValidPhoneNumber(contactNumberTextField.getText()))
        {
            validInput = false;
            JOptionPane.showMessageDialog(this, "Invalid Phone. Please update and resubmit."  );
        }
         else if(!isValidAge(ageTextField.getText()))
        {
            validInput = false;
            JOptionPane.showMessageDialog(this, "Invalid Age. Please update and resubmit."  );
        }
        else if(!isValidAddress(addressTextField.getText()))
        {
            validInput = false;
            JOptionPane.showMessageDialog(this, "Invalid Address. Please update and resubmit."  );
        }
        else{

        student.setUserId(null);
        student.setFirstName(firstNameTextField.getText());
        student.setLastName(lastNameTextField.getText());
        student.setEmail(emailTextField.getText());
        student.setContactNumber(contactNumberTextField.getText());
        student.setAge(Integer.parseInt(ageTextField.getText()));
        student.setAddress(addressTextField.getText());
        student.setUsername(emailTextField.getText());
        student.setPassword(contactNumberTextField.getText());
        student.setRole(AppUser.Role.Student);
        
     try {
         this.studentService.addStudentByParentId(student, parentId);
          } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
     
         //clear the text fields
         firstNameTextField.setText("");
         lastNameTextField.setText("");
         emailTextField.setText("");
         contactNumberTextField.setText("");
         ageTextField.setText("");
         addressTextField.setText("");
         
        
        
         //load the parent info to jtable
          DefaultTableModel studentModel = (DefaultTableModel)studentInfoTable.getModel();
        studentModel.setRowCount(0);
        Object rowData[] = new Object[8];  
        
        
        try {
            studentList = (ArrayList)this.studentService.getAllStudents();
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for(int j = 0; j < studentList.size(); j++)
        {
        rowData[0] = studentList.get(j).getUserId();
        rowData[1] = studentList.get(j).getFirstName();
        rowData[2] = studentList.get(j).getLastName();
        rowData[3] = studentList.get(j).getContactNumber();
        rowData[4] = studentList.get(j).getEmail();
        rowData[5] = studentList.get(j).getAge();
        rowData[6] = studentList.get(j).getAddress();
        rowData[7] = new JButton("Action");    
       
        studentModel.addRow(rowData);
        }
        
        TableActionEvent event = new TableActionEvent() {
            @Override
            public void onSave(int row) {
               String contactNo = studentModel.getValueAt(row, 3).toString();
                studentList.get(row).setContactNumber(contactNo);
                String email = studentModel.getValueAt(row, 4).toString();
                studentList.get(row).setEmail(email);
                String address = studentModel.getValueAt(row, 6).toString();
                studentList.get(row).setAddress(address);
                
                Student student = new Student();
                try {
                    student = studentService.getStudentById(Integer.valueOf(studentModel.getValueAt(row, 0).toString()));
                    student.setContactNumber(contactNo);
                    student.setEmail(email);
                    student.setAddress(address);
                            
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    studentService.updateStudentById(Integer.valueOf(studentModel.getValueAt(row, 0).toString()),student );
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void onDelete(int row) {
                
                 if(studentInfoTable.isEditing()){
                    studentInfoTable.getCellEditor().stopCellEditing();
                }
                
                try {
                    String deleteStudentById = studentService.deleteStudentById(Integer.valueOf(studentModel.getValueAt(row, 0).toString()));
                } catch (CustomException ex) {
                    Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                studentModel.removeRow(row);
                studentList.remove(row);
            }
        };
        studentInfoTable.getColumnModel().getColumn(7).setCellRenderer(new TableActionCellRender());
        studentInfoTable.getColumnModel().getColumn(7).setCellEditor(new TableActionCellEditor(event));
        //studentInfoTable.getColumnModel().getColumn(7).setPreferredWidth(50);
       
//        DocBotPanel.removeAll();
//        DocBotPanel.add(viewPatientPanel);
//        DocBotPanel.repaint();
//        DocBotPanel.revalidate();
     }
    }//GEN-LAST:event_createButtonActionPerformed

    private void parentDashboardDownloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentDashboardDownloadButtonActionPerformed
        // TODO add your handling code here:
        downloadReport(parentDashboardStudentTable, "Student Information");
        JOptionPane.showMessageDialog(this, "Report Downloaded Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_parentDashboardDownloadButtonActionPerformed

    private void createButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButton1ActionPerformed
        // TODO add your handling code here:
        //Add Feedback to Student
        feedback.setFoodFeedback(Integer.parseInt(foodFeedbackCombo.getSelectedItem().toString()));
        feedback.setStaffFeedback(Integer.parseInt(staffFeedbackCombo.getSelectedItem().toString()));
        feedback.setActivityFeedback(Integer.parseInt(activityFeedbackCombo.getSelectedItem().toString()));
        feedback.setManagementFeedback(Integer.parseInt(overallFeedbackCombo.getSelectedItem().toString()));
        feedback.setRecommendations(recommendationFeedbackTextField.getText());
        
        try {
            feedbackService.addFeedbackByStudentId(Integer.parseInt(studentFeedbackId.getText()), feedback);
            recommendationFeedbackTextField.setText(" ");
            studentFeedbackId.setText(" ");
            JOptionPane.showMessageDialog(this, "Feedback sent!", "Success", JOptionPane.INFORMATION_MESSAGE);
            
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Enter Valid User Id", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
      
        
        
    }//GEN-LAST:event_createButton1ActionPerformed

    private void editParentButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editParentButton1ActionPerformed
        // TODO add your handling code here:
         profileFirstNameTextfield.setText(parent.getFirstName());
        profileFirstNameTextfield.setEnabled(false);
        lastNameProfileTextfield.setText(parent.getLastName());
        emailParentProfileTextField.setText(parent.getEmail());
        lastNameProfileTextfield.setEnabled(false);
        contactNoParentProfileTextField.setText(parent.getContactNumber());
        contactNoParentProfileTextField.setEnabled(true);
        addressParentProfileTextField.setText(parent.getAddress());
        addressParentProfileTextField.setEnabled(true);
        studentList = (ArrayList<Student>) parent.getStudent();
       
        
    }//GEN-LAST:event_editParentButton1ActionPerformed

    private void updateParentButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateParentButton1ActionPerformed
        // TODO add your handling code here:
        
        parent.setFirstName(profileFirstNameTextfield.getText());
        profileFirstNameTextfield.setEnabled(false);
        parent.setLastName(lastNameProfileTextfield.getText());
        lastNameProfileTextfield.setEnabled(false);
        parent.setEmail(emailParentProfileTextField.getText());
        emailParentProfileTextField.setEnabled(false);
        parent.setContactNumber(contactNoParentProfileTextField.getText());
        contactNoParentProfileTextField.setEnabled(false);
        parent.setAddress(addressParentProfileTextField.getText());
        addressParentProfileTextField.setEnabled(false);       
        
        try {
            parentService.updateParentById(loggedInUserId, parent);
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_updateParentButton1ActionPerformed

    public static boolean isValidName(String name) {
        // is null or empty
        if (name == null || name.trim().isEmpty()) {
            return false;
        }

        // input length 
        if (name.length() > 50) {
            return false;
        }

        // input validation using regular expression
        String regex = "^[a-zA-Z]+$"; 
        Pattern ipPattern = Pattern.compile(regex);
        Matcher ipMatcher = ipPattern.matcher(name);

        return ipMatcher.matches();
    }

 public static boolean isValidAddress(String address) {
        // is null or empty
        if (address == null || address.trim().isEmpty()) {
            return false;
        }

        
        // input validation using regular expression
        String regex = "^[a-zA-Z]+$"; 
        Pattern ipPattern = Pattern.compile(regex);
        Matcher ipMatcher = ipPattern.matcher(address);

        return ipMatcher.matches();
    }
    
    public static boolean isValidAge(String userAge){
    try
        {
            int maxAge =15;
            int age = Integer.parseInt(userAge);

            if(age < 0 || age > maxAge)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        catch (NumberFormatException ex) 
        {
            return false;
        }
        
    }
    
    public static boolean isValidPhoneNumber(String phoneNumber)
    {
        // Define the regex pattern for a 10-digit U.S. phone number
        String regex = "^(\\d{10}|\\d{3}[-\\.\\s]?\\d{3}[-\\.\\s]?\\d{4}|\\(\\d{3}\\)[-\\.\\s]?\\d{3}[-\\.\\s]?\\d{4})$";

        // Compile the pattern
        Pattern ipPattern = Pattern.compile(regex);

        // Match the input phone number against the pattern
        Matcher ipMatcher = ipPattern.matcher(phoneNumber);

        // Return true if the phone number matches the pattern, false otherwise
        return ipMatcher.matches();
    }
    
    public static boolean isValidEmail(String email) {
        // Define the regex pattern for a basic email address validation
        String regex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";

        // Compile the pattern
        Pattern ipPattern = Pattern.compile(regex);

        // Match the input email against the pattern
        Matcher ipMatcher = ipPattern.matcher(email);

        // Return true if the email matches the pattern, false otherwise
        return ipMatcher.matches();
    }
    
    private void foodPreferencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodPreferencesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodPreferencesActionPerformed

    private void recommendationFeedbackTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recommendationFeedbackTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recommendationFeedbackTextFieldActionPerformed

    private void passwordSchoolTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordSchoolTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordSchoolTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SchoolMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SchoolMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SchoolMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SchoolMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SchoolMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressStudentTextLabel;
    private javax.swing.JLabel AgeStudentText;
    private javax.swing.JLabel AttendancestudentText;
    private javax.swing.JLabel ContactNumberStudentText;
    private javax.swing.JLabel Q1Label;
    private javax.swing.JLabel Q1Label1;
    private javax.swing.JComboBox<String> activityFeedbackCombo;
    private javax.swing.JButton addCampRegistrationButton;
    private javax.swing.JLabel addressParentProfileLabel;
    private javax.swing.JTextField addressParentProfileTextField;
    private javax.swing.JTextField addressParentTextField;
    private javax.swing.JLabel addressParentTextLabel;
    private javax.swing.JLabel addressStudentProfileLabel;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JLabel addressTextLabel;
    private javax.swing.JPanel adminDashboard;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JLabel ageTextLabel;
    private javax.swing.JTextArea allergies;
    private javax.swing.JComboBox<String> beveragePreference;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JLabel campRegistrationAllergiesLabel;
    private javax.swing.JLabel campRegistrationBeverageLabel;
    private javax.swing.JLabel campRegistrationFoodLabel;
    private javax.swing.JLabel campRegistrationMedCondition;
    private javax.swing.JLabel campRegistrationPassword;
    private javax.swing.JLabel campRegistrationUserName;
    private javax.swing.JLabel campReportLabel1;
    private javax.swing.JLabel conactNumbertextLabel;
    private javax.swing.JLabel conactNumbertextLabel1;
    private javax.swing.JLabel conactNumbertextLabel2;
    private javax.swing.JTextField contactNoParentProfileTextField;
    private javax.swing.JLabel contactNumberParentProfileLabel;
    private javax.swing.JTextField contactNumberParentTextField;
    private javax.swing.JLabel contactNumberStudentProfileLabel;
    private javax.swing.JTextField contactNumberTextField;
    private javax.swing.JLabel contactNumberTextLabel;
    private javax.swing.JButton createButton;
    private javax.swing.JButton createButton1;
    private javax.swing.JButton createParentButton;
    private javax.swing.JButton dashboardButton1;
    private javax.swing.JLabel dashboardParentLabel;
    private javax.swing.JLabel dashboardStudentLabel;
    private javax.swing.JButton editParentButton1;
    private javax.swing.JLabel emailParentProfileLabel;
    private javax.swing.JTextField emailParentProfileTextField;
    private javax.swing.JTextField emailParentTextField;
    private javax.swing.JLabel emailParentTextLabel;
    private javax.swing.JLabel emailStudentProfileLabel;
    private javax.swing.JLabel emailStudentTextLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel emailTextLabel;
    private javax.swing.JButton feedbackButton;
    private javax.swing.JLabel firstNameParentTextLabel;
    private javax.swing.JLabel firstNameProfileLabel;
    private javax.swing.JLabel firstNameProfileTextLabel1;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel firstNameTextLabel;
    private javax.swing.JComboBox<String> foodFeedbackCombo;
    private javax.swing.JComboBox<String> foodPreferences;
    private javax.swing.JLabel gradeStudentText;
    private javax.swing.JLabel guardianTextLabel;
    private javax.swing.JLabel guardianTextLabel1;
    private javax.swing.JLabel imgOne;
    private javax.swing.JLabel imgThree;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private com.toedter.components.JLocaleChooser jLocaleChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JLabel lastNameParentTextLabel;
    private javax.swing.JTextField lastNameParentTextfield;
    private javax.swing.JLabel lastNameProfileLabel;
    private javax.swing.JTextField lastNameProfileTextfield;
    private javax.swing.JLabel lastNameStudentProfileLabel;
    private javax.swing.JLabel lastNameStudentText;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel lastNameTextLabel;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel leftParentPanel;
    private javax.swing.JPanel leftStudentPanel;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton loginSchoolButton;
    private javax.swing.JButton logoutButton;
    private javax.swing.JTextArea medicalConditions;
    private javax.swing.JComboBox<String> overallFeedbackCombo;
    private javax.swing.JButton parentCrudButton;
    private javax.swing.JPanel parentCrudPanel;
    private javax.swing.JLabel parentCrudtextLabel;
    private javax.swing.JLabel parentCrudtextLabel1;
    private javax.swing.JLabel parentCrudtextLabel2;
    private javax.swing.JPanel parentDashboard;
    private javax.swing.JButton parentDashboardButton;
    private javax.swing.JButton parentDashboardDownloadButton;
    private javax.swing.JLabel parentDashboardLabel;
    private javax.swing.JTable parentDashboardStudentTable;
    private javax.swing.JPanel parentFeedbackPanel;
    private javax.swing.JTextField parentFirstNameField;
    private javax.swing.JTable parentInfoTable;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JPanel parentProfilePanel;
    private javax.swing.JSplitPane parentSplitPane;
    private javax.swing.JLabel parentsTextLabel;
    private javax.swing.JLabel passwordLoginPanel;
    private javax.swing.JTextField passwordSchoolTextField;
    private javax.swing.JButton profileButton;
    private javax.swing.JTextField profileFirstNameTextfield;
    private javax.swing.JTextField recommendationFeedbackTextField;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JPanel rightParentPanel;
    private javax.swing.JPanel rightStudentPanel;
    private javax.swing.JLabel roleLoginLabel;
    private javax.swing.JComboBox<String> roleSchoolDropBox;
    private javax.swing.JButton schoolReportButton;
    private javax.swing.JLabel schoolReportLabel;
    private javax.swing.JLabel schoolReportLabel1;
    private javax.swing.JPanel schoolReportPanel;
    private javax.swing.JTable schoolReportTable;
    private javax.swing.JSplitPane schoolSplitPane;
    private javax.swing.JComboBox<String> selectParentComboBox;
    private javax.swing.JComboBox<String> staffFeedbackCombo;
    private javax.swing.JTextField studentCampPassword;
    private javax.swing.JButton studentCampRegButton;
    private javax.swing.JPanel studentCampRegistrationPanel;
    private javax.swing.JTextField studentCampUsername;
    private javax.swing.JButton studentCrudButton;
    private javax.swing.JPanel studentCrudPanel;
    private javax.swing.JLabel studentCrudTextLabel;
    private javax.swing.JLabel studentCrudTextLabel1;
    private javax.swing.JPanel studentDashboard;
    private javax.swing.JPanel studentDashboard1;
    private javax.swing.JButton studentDashboardButton;
    private javax.swing.JLabel studentDashboardLabel3;
    private javax.swing.JLabel studentDashboardLabel5;
    private javax.swing.JTextField studentFeedbackId;
    private javax.swing.JLabel studentFirstNameTextLabel;
    private javax.swing.JTable studentInfoTable;
    private javax.swing.JLabel studentMealPrefLabel1;
    private javax.swing.JPanel studentPanel;
    private javax.swing.JButton studentProfileButton;
    private javax.swing.JPanel studentProfilePanel;
    private javax.swing.JButton studentReportButton;
    private javax.swing.JSplitPane studentSplitPane;
    private javax.swing.JLabel studentTextLabel;
    private javax.swing.JPanel studentschoolReportPanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JButton updateParentButton1;
    private javax.swing.JLabel userNameLoginLabel;
    private javax.swing.JTextField usernameSchoolTextField;
    private javax.swing.JLabel usernameTextLabel1;
    private javax.swing.JLabel welcomeSchoolLabel;
    // End of variables declaration//GEN-END:variables
}

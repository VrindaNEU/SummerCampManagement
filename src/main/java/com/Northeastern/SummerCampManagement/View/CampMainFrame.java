/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.Northeastern.SummerCampManagement.View;

import com.Northeastern.SummerCampManagement.Entity.Activity;
import com.Northeastern.SummerCampManagement.Entity.AppUser;
import com.Northeastern.SummerCampManagement.Entity.CampAdmin;
import com.Northeastern.SummerCampManagement.Entity.CampStaff;
import com.Northeastern.SummerCampManagement.Entity.Feedback;
import com.Northeastern.SummerCampManagement.Entity.MealPreference;
import com.Northeastern.SummerCampManagement.Entity.Parent;
import com.Northeastern.SummerCampManagement.Entity.Schedule;
import com.Northeastern.SummerCampManagement.Entity.Student;

import com.Northeastern.SummerCampManagement.Service.ActivityService;
import com.Northeastern.SummerCampManagement.Service.CampAdminService;
import com.Northeastern.SummerCampManagement.Service.CampStaffService;
import com.Northeastern.SummerCampManagement.Service.CustomException;
import com.Northeastern.SummerCampManagement.Service.FeedbackService;
import com.Northeastern.SummerCampManagement.Service.MealPreferenceService;
import com.Northeastern.SummerCampManagement.Service.ParentService;
import com.Northeastern.SummerCampManagement.Service.ScheduleService;
import com.Northeastern.SummerCampManagement.Service.SchoolAdminService;
import com.Northeastern.SummerCampManagement.Service.StudentService;
import java.util.ArrayList;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Row;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.util.Rotation;

/**
 *
 * @author jalan
 */
public class CampMainFrame extends javax.swing.JFrame {

    //********Autowiring********//
    CampAdminService adminService ;
    StudentService camperService;
    CampStaffService staffService;
    ActivityService activityService;
    ScheduleService scheduleService;
    MealPreferenceService mealPreferenceService;
      FeedbackService feedbackService;
   //****--end---********//
    
    CampAdmin admin;
    CampStaff staff;
    Student camper;
    Activity activity;
    Schedule schedule;
    MealPreference mealPreference;
    Integer userLoggedInId;
    Feedback feedback;
    
     public ArrayList<Student> camperList = new ArrayList<Student>();
     public ArrayList<Activity> activityList = new ArrayList<Activity>();
     public ArrayList<CampStaff> staffList = new ArrayList<CampStaff>();
     public ArrayList<Integer> activityIds  = new ArrayList<Integer>();
     public ArrayList<String> camperNames  = new ArrayList<String>();
     public ArrayList<MealPreference> mealPreferenceList = new ArrayList<MealPreference>();
     public ArrayList<Schedule> scheduleList = new ArrayList<Schedule>();
     public ArrayList<Feedback> feedbackList = new ArrayList<Feedback>();
    /**
     * Creates new form MainFrame
     */
    public CampMainFrame() {
        initComponents();
         campSplitPane.setVisible(false);
        topPanel.setVisible(false);
        bottomPanel.setVisible(false);
        loginPanel.setVisible(true);
        
          //********Autowiring********//
       adminService = (CampAdminService) BeanUtil.getBean("campAdminService");
         camperService = (StudentService) BeanUtil.getBean("studentService");
        staffService = (CampStaffService) BeanUtil.getBean("campStaffService");
        activityService = (ActivityService) BeanUtil.getBean("activityService");
         scheduleService = (ScheduleService) BeanUtil.getBean("scheduleService");
         mealPreferenceService = (MealPreferenceService) BeanUtil.getBean("mealPreferenceService");
         feedbackService = (FeedbackService) BeanUtil.getBean("feedbackService");
      //****--end---********//
        
        //Initialize
        admin = new CampAdmin();
        staff = new CampStaff();
        camper = new Student();
        activity = new Activity();
        schedule = new Schedule();
        mealPreference = new MealPreference();
        //feedbackService = new FeedbackService();
        feedback = new Feedback();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLocaleChooser1 = new com.toedter.components.JLocaleChooser();
        loginPanel = new javax.swing.JPanel();
        userNameCampLoginLabel = new javax.swing.JLabel();
        passwordLoginCampLabel = new javax.swing.JLabel();
        roleCampLoginLabel = new javax.swing.JLabel();
        usernameCampTextField = new javax.swing.JTextField();
        passwordCampTextField = new javax.swing.JTextField();
        roleCampDropBox = new javax.swing.JComboBox<>();
        welcomeCampLabel = new javax.swing.JLabel();
        loginCampButton = new javax.swing.JButton();
        campSplitPane = new javax.swing.JSplitPane();
        topPanel = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();
        topPanelHeaderLabel = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        adminPanel = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        rightPanel = new javax.swing.JPanel();
        adminDashboard = new javax.swing.JPanel();
        dashboardCampLabel = new javax.swing.JLabel();
        dashboardStaffLabel = new javax.swing.JLabel();
        studentTextLabel = new javax.swing.JLabel();
        staffTextLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dashboardStaffLabel1 = new javax.swing.JLabel();
        activityListTextLabel = new javax.swing.JLabel();
        registrationReportPanel = new javax.swing.JPanel();
        RegistrationReportTextLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        camperRegistrationReportTable = new javax.swing.JTable();
        feedbackPanel = new javax.swing.JPanel();
        parentCrudtextLabel = new javax.swing.JLabel();
        activityFeedbackLabel = new javax.swing.JLabel();
        activityFeedbackText = new javax.swing.JLabel();
        managementFeedbackLabel = new javax.swing.JLabel();
        managementFeedbackText = new javax.swing.JLabel();
        staffFeedbackLabel = new javax.swing.JLabel();
        staffFeedbackText = new javax.swing.JLabel();
        foodFeedbackLabel = new javax.swing.JLabel();
        foodFeedbackText = new javax.swing.JLabel();
        feedbackChartButton = new javax.swing.JButton();
        staffCrudPanel = new javax.swing.JPanel();
        staffActivityLabel = new javax.swing.JLabel();
        firstNameStaffActivityLabel = new javax.swing.JLabel();
        lastNameStaffActivityLabel = new javax.swing.JLabel();
        emailStaffActivityLabel = new javax.swing.JLabel();
        contactStaffActivityLabel = new javax.swing.JLabel();
        designationStaffActivityLabel = new javax.swing.JLabel();
        staffActivityStatusLabel = new javax.swing.JLabel();
        staffActivityStatusDropDown = new javax.swing.JComboBox<>();
        designationStaffActivityDropDown = new javax.swing.JComboBox<>();
        contactStaffActivityField = new javax.swing.JTextField();
        firstNameStaffActivityField = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        staffActivityTable = new javax.swing.JTable();
        createStaffActivityButton = new javax.swing.JButton();
        editStaffActivityButton = new javax.swing.JButton();
        deleteStaffActivityButton = new javax.swing.JButton();
        saveStaffActivityButton = new javax.swing.JButton();
        leftPanel = new javax.swing.JPanel();
        campRegButton = new javax.swing.JButton();
        campAdmindashboardButton = new javax.swing.JButton();
        campFeedbackButton = new javax.swing.JButton();
        staffPanel = new javax.swing.JPanel();
        staffSplitPane = new javax.swing.JSplitPane();
        rightStaffPanel = new javax.swing.JPanel();
        staffDashboard = new javax.swing.JPanel();
        parentDashboardLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        camperCount = new javax.swing.JLabel();
        activityCount = new javax.swing.JLabel();
        staffActivityPanel = new javax.swing.JPanel();
        activityTitle = new javax.swing.JLabel();
        activityNameTextLabel = new javax.swing.JLabel();
        activityAgeTextfield = new javax.swing.JTextField();
        activityDescriptionLabel = new javax.swing.JLabel();
        activityCreateButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        activityDescriptionTextarea = new javax.swing.JTextArea();
        activityCategoryLabel = new javax.swing.JLabel();
        activityCategoryCombo = new javax.swing.JComboBox<>();
        activityAgeGroupLabel = new javax.swing.JLabel();
        activityNameTextfield1 = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        activityViewTable = new javax.swing.JTable();
        staffSchedulePanel = new javax.swing.JPanel();
        staffScheduleLabel = new javax.swing.JLabel();
        scheduleActivityLabel = new javax.swing.JLabel();
        activityDateLabel = new javax.swing.JLabel();
        activityStartTime = new javax.swing.JLabel();
        activityEndTimeLabel = new javax.swing.JLabel();
        selectActivityCombo = new javax.swing.JComboBox<>();
        activityStartTimeText = new javax.swing.JTextField();
        activityEndTimeText = new javax.swing.JTextField();
        activityLocationLabel = new javax.swing.JLabel();
        selectLocationCombo = new javax.swing.JComboBox<>();
        staffScheduleSubmitButton = new javax.swing.JButton();
        scheduleStaffDate = new com.toedter.calendar.JDateChooser();
        dietryPreferencePanel = new javax.swing.JPanel();
        dietaryPrefLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        viewMealPrefTable = new javax.swing.JTable();
        leftStaffPanel = new javax.swing.JPanel();
        staffActivityButton = new javax.swing.JButton();
        staffDashboardButton = new javax.swing.JButton();
        staffSchedulesButton = new javax.swing.JButton();
        staffDietButton = new javax.swing.JButton();
        camperPanel = new javax.swing.JPanel();
        camperSplitPane = new javax.swing.JSplitPane();
        rightCamperPanel = new javax.swing.JPanel();
        camperDashboard = new javax.swing.JPanel();
        camperDashboardPanel = new javax.swing.JPanel();
        camperUpcomingActivityDashboardLabel = new javax.swing.JLabel();
        camperscheduleImageLabel = new javax.swing.JLabel();
        camperDashboardLabel = new javax.swing.JLabel();
        camperActivityPanel = new javax.swing.JPanel();
        camperActivityLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        activityTable = new javax.swing.JTable();
        registerActivityButton = new javax.swing.JButton();
        camperSchedulePanel = new javax.swing.JPanel();
        camperScheduleLabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        viewMySchedulesTable = new javax.swing.JTable();
        camperDietPanel = new javax.swing.JPanel();
        dietPreferencesLabel = new javax.swing.JLabel();
        allergiesDietLabel = new javax.swing.JLabel();
        medicalDietLabel = new javax.swing.JLabel();
        beveragesDietlabel = new javax.swing.JLabel();
        foodDietLabel = new javax.swing.JLabel();
        allergiesDietTextField = new javax.swing.JTextField();
        medicalDietTextField = new javax.swing.JTextField();
        editDietButton = new javax.swing.JButton();
        beverageDietComboBox = new javax.swing.JComboBox<>();
        foodDietComboBox = new javax.swing.JComboBox<>();
        saveDietButton = new javax.swing.JButton();
        leftCamperPanel = new javax.swing.JPanel();
        camperActivityButton = new javax.swing.JButton();
        camperDashboardButton = new javax.swing.JButton();
        camperDietButton = new javax.swing.JButton();
        camperScheduleButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userNameCampLoginLabel.setText("Username");

        passwordLoginCampLabel.setText("Password");

        roleCampLoginLabel.setText("Role");

        roleCampDropBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "camper", "staff", "admin" }));

        welcomeCampLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        welcomeCampLabel.setText("WELCOME TO THE CAMP PORTAL");

        loginCampButton.setText("LOGIN");
        loginCampButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginCampButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(loginPanelLayout.createSequentialGroup()
                                    .addComponent(passwordLoginCampLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(passwordCampTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(loginPanelLayout.createSequentialGroup()
                                    .addComponent(userNameCampLoginLabel)
                                    .addGap(97, 97, 97)
                                    .addComponent(usernameCampTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, loginPanelLayout.createSequentialGroup()
                                .addComponent(roleCampLoginLabel)
                                .addGap(127, 127, 127)
                                .addComponent(roleCampDropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(welcomeCampLabel))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(loginCampButton)))
                .addContainerGap(209, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(welcomeCampLabel)
                .addGap(65, 65, 65)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameCampLoginLabel)
                    .addComponent(usernameCampTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLoginCampLabel)
                    .addComponent(passwordCampTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleCampLoginLabel)
                    .addComponent(roleCampDropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addComponent(loginCampButton)
                .addContainerGap(346, Short.MAX_VALUE))
        );

        campSplitPane.setDividerLocation(70);
        campSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        logoutButton.setForeground(new java.awt.Color(255, 51, 0));
        logoutButton.setText("X");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap(309, Short.MAX_VALUE)
                .addComponent(topPanelHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(278, 278, 278)
                .addComponent(logoutButton)
                .addGap(23, 23, 23))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoutButton)
                    .addComponent(topPanelHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        campSplitPane.setTopComponent(topPanel);

        bottomPanel.setLayout(new java.awt.CardLayout());

        adminPanel.setPreferredSize(new java.awt.Dimension(700, 595));

        jSplitPane2.setDividerLocation(100);
        jSplitPane2.setPreferredSize(new java.awt.Dimension(700, 595));

        rightPanel.setPreferredSize(new java.awt.Dimension(599, 595));
        rightPanel.setLayout(new java.awt.CardLayout());

        dashboardCampLabel.setText("No. Of Campers");

        dashboardStaffLabel.setText("No. Of Staff");

        studentTextLabel.setText("number here");

        staffTextLabel.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("DASHBOARD");

        dashboardStaffLabel1.setText("No. Of Activities");

        activityListTextLabel.setText("jLabel1");

        javax.swing.GroupLayout adminDashboardLayout = new javax.swing.GroupLayout(adminDashboard);
        adminDashboard.setLayout(adminDashboardLayout);
        adminDashboardLayout.setHorizontalGroup(
            adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminDashboardLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dashboardCampLabel)
                    .addComponent(dashboardStaffLabel))
                .addGroup(adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminDashboardLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(adminDashboardLayout.createSequentialGroup()
                                .addComponent(studentTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(dashboardStaffLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(activityListTextLabel))))
                    .addGroup(adminDashboardLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(staffTextLabel)))
                .addGap(56, 56, 56))
        );
        adminDashboardLayout.setVerticalGroup(
            adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDashboardLayout.createSequentialGroup()
                .addGroup(adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminDashboardLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dashboardCampLabel)
                            .addComponent(studentTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dashboardStaffLabel1)
                            .addComponent(activityListTextLabel)))
                    .addGroup(adminDashboardLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel2)))
                .addGap(44, 44, 44)
                .addGroup(adminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dashboardStaffLabel)
                    .addComponent(staffTextLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rightPanel.add(adminDashboard, "card2");

        registrationReportPanel.setPreferredSize(new java.awt.Dimension(599, 595));

        RegistrationReportTextLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        RegistrationReportTextLabel.setText("REGISTRATION REPORT");

        camperRegistrationReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Registration Date", "Email", "Age", "Address"
            }
        ));
        camperRegistrationReportTable.setPreferredSize(new java.awt.Dimension(599, 120));
        jScrollPane1.setViewportView(camperRegistrationReportTable);
        if (camperRegistrationReportTable.getColumnModel().getColumnCount() > 0) {
            camperRegistrationReportTable.getColumnModel().getColumn(2).setMinWidth(10);
        }

        javax.swing.GroupLayout registrationReportPanelLayout = new javax.swing.GroupLayout(registrationReportPanel);
        registrationReportPanel.setLayout(registrationReportPanelLayout);
        registrationReportPanelLayout.setHorizontalGroup(
            registrationReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrationReportPanelLayout.createSequentialGroup()
                .addGroup(registrationReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registrationReportPanelLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(RegistrationReportTextLabel))
                    .addGroup(registrationReportPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        registrationReportPanelLayout.setVerticalGroup(
            registrationReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrationReportPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(RegistrationReportTextLabel)
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addGap(324, 324, 324))
        );

        rightPanel.add(registrationReportPanel, "card3");

        feedbackPanel.setPreferredSize(new java.awt.Dimension(599, 595));

        parentCrudtextLabel.setText("FEEDBACK");

        activityFeedbackLabel.setText("Feedback for Activity:");

        activityFeedbackText.setText("jLabel4");

        managementFeedbackLabel.setText("Feedback for Managenment:");

        managementFeedbackText.setText("jLabel4");

        staffFeedbackLabel.setText("Feedback for Staff");

        staffFeedbackText.setText("jLabel4");

        foodFeedbackLabel.setText("Feedback for Food:");

        foodFeedbackText.setText("jLabel4");

        feedbackChartButton.setText("Feedback View");
        feedbackChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedbackChartButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout feedbackPanelLayout = new javax.swing.GroupLayout(feedbackPanel);
        feedbackPanel.setLayout(feedbackPanelLayout);
        feedbackPanelLayout.setHorizontalGroup(
            feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedbackPanelLayout.createSequentialGroup()
                .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(feedbackPanelLayout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(parentCrudtextLabel))
                    .addGroup(feedbackPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(feedbackPanelLayout.createSequentialGroup()
                                .addComponent(activityFeedbackLabel)
                                .addGap(47, 47, 47)
                                .addComponent(activityFeedbackText))
                            .addGroup(feedbackPanelLayout.createSequentialGroup()
                                .addComponent(managementFeedbackLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(managementFeedbackText)))
                        .addGap(49, 49, 49)
                        .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(staffFeedbackLabel)
                            .addComponent(foodFeedbackLabel))
                        .addGap(32, 32, 32)
                        .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(foodFeedbackText)
                            .addComponent(staffFeedbackText)))
                    .addGroup(feedbackPanelLayout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(feedbackChartButton)))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        feedbackPanelLayout.setVerticalGroup(
            feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feedbackPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(parentCrudtextLabel)
                .addGap(159, 159, 159)
                .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activityFeedbackLabel)
                    .addComponent(activityFeedbackText)
                    .addComponent(staffFeedbackLabel)
                    .addComponent(staffFeedbackText))
                .addGap(57, 57, 57)
                .addGroup(feedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(managementFeedbackLabel)
                    .addComponent(managementFeedbackText)
                    .addComponent(foodFeedbackLabel)
                    .addComponent(foodFeedbackText))
                .addGap(76, 76, 76)
                .addComponent(feedbackChartButton)
                .addContainerGap(226, Short.MAX_VALUE))
        );

        rightPanel.add(feedbackPanel, "card4");

        staffActivityLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        staffActivityLabel.setText("STAFF");

        firstNameStaffActivityLabel.setText("First Name");

        lastNameStaffActivityLabel.setText("Last Name");

        emailStaffActivityLabel.setText("Email");

        contactStaffActivityLabel.setText("Contact Number");

        designationStaffActivityLabel.setText("Designation");

        staffActivityStatusLabel.setText("Active Status");

        staffActivityStatusDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "InActive" }));

        designationStaffActivityDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Camp Lead", "Camp Manager", "Camp Assistant" }));
        designationStaffActivityDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                designationStaffActivityDropDownActionPerformed(evt);
            }
        });

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        staffActivityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Last Name", "Email", "Contact No.", "Designation", "Activity Status"
            }
        ));
        jScrollPane4.setViewportView(staffActivityTable);

        createStaffActivityButton.setText("Create");

        editStaffActivityButton.setText("Edit");

        deleteStaffActivityButton.setText("Delete");

        saveStaffActivityButton.setText("Save");

        javax.swing.GroupLayout staffCrudPanelLayout = new javax.swing.GroupLayout(staffCrudPanel);
        staffCrudPanel.setLayout(staffCrudPanelLayout);
        staffCrudPanelLayout.setHorizontalGroup(
            staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffCrudPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(firstNameStaffActivityLabel)
                        .addComponent(lastNameStaffActivityLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(emailStaffActivityLabel, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(staffCrudPanelLayout.createSequentialGroup()
                        .addComponent(createStaffActivityButton)
                        .addGap(2, 2, 2)))
                .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(staffCrudPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameStaffActivityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(contactStaffActivityLabel)
                                .addComponent(designationStaffActivityLabel))
                            .addGroup(staffCrudPanelLayout.createSequentialGroup()
                                .addComponent(staffActivityStatusLabel)
                                .addGap(24, 24, 24)))
                        .addGap(39, 39, 39)
                        .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(staffCrudPanelLayout.createSequentialGroup()
                                .addComponent(contactStaffActivityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(staffCrudPanelLayout.createSequentialGroup()
                                .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(deleteStaffActivityButton)
                                    .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(designationStaffActivityDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(staffActivityStatusDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(staffCrudPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(editStaffActivityButton)
                        .addGap(71, 71, 71)
                        .addComponent(saveStaffActivityButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(staffCrudPanelLayout.createSequentialGroup()
                .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(staffCrudPanelLayout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(staffActivityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        staffCrudPanelLayout.setVerticalGroup(
            staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffCrudPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(staffActivityLabel)
                .addGap(34, 34, 34)
                .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameStaffActivityLabel)
                    .addComponent(contactStaffActivityLabel)
                    .addComponent(firstNameStaffActivityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactStaffActivityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameStaffActivityLabel)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(designationStaffActivityLabel)
                    .addComponent(designationStaffActivityDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailStaffActivityLabel)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staffActivityStatusLabel)
                    .addComponent(staffActivityStatusDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(staffCrudPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createStaffActivityButton)
                    .addComponent(editStaffActivityButton)
                    .addComponent(saveStaffActivityButton)
                    .addComponent(deleteStaffActivityButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        rightPanel.add(staffCrudPanel, "card5");

        jSplitPane2.setRightComponent(rightPanel);

        leftPanel.setBackground(new java.awt.Color(0, 51, 255));

        campRegButton.setText("Registration");
        campRegButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campRegButtonActionPerformed(evt);
            }
        });

        campAdmindashboardButton.setText("DashBoard");
        campAdmindashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campAdmindashboardButtonActionPerformed(evt);
            }
        });

        campFeedbackButton.setText("Feedback");
        campFeedbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campFeedbackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(campAdmindashboardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campRegButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campFeedbackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(campAdmindashboardButton)
                .addGap(49, 49, 49)
                .addComponent(campRegButton)
                .addGap(55, 55, 55)
                .addComponent(campFeedbackButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane2.setLeftComponent(leftPanel);

        javax.swing.GroupLayout adminPanelLayout = new javax.swing.GroupLayout(adminPanel);
        adminPanel.setLayout(adminPanelLayout);
        adminPanelLayout.setHorizontalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        adminPanelLayout.setVerticalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bottomPanel.add(adminPanel, "card2");

        staffPanel.setPreferredSize(new java.awt.Dimension(700, 595));

        staffSplitPane.setDividerLocation(120);
        staffSplitPane.setPreferredSize(new java.awt.Dimension(700, 595));

        rightStaffPanel.setLayout(new java.awt.CardLayout());

        staffDashboard.setPreferredSize(new java.awt.Dimension(695, 695));

        parentDashboardLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        parentDashboardLabel.setText("DASHBOARD");

        jLabel1.setText("No. of Campers");

        jLabel3.setText("No. of Activities");

        camperCount.setText("jLabel12");

        activityCount.setText("jLabel13");

        javax.swing.GroupLayout staffDashboardLayout = new javax.swing.GroupLayout(staffDashboard);
        staffDashboard.setLayout(staffDashboardLayout);
        staffDashboardLayout.setHorizontalGroup(
            staffDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffDashboardLayout.createSequentialGroup()
                .addGroup(staffDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(staffDashboardLayout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(parentDashboardLabel))
                    .addGroup(staffDashboardLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(staffDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(107, 107, 107)
                        .addGroup(staffDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(camperCount)
                            .addComponent(activityCount))))
                .addContainerGap(352, Short.MAX_VALUE))
        );
        staffDashboardLayout.setVerticalGroup(
            staffDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffDashboardLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(parentDashboardLabel)
                .addGap(54, 54, 54)
                .addGroup(staffDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(camperCount))
                .addGap(53, 53, 53)
                .addGroup(staffDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(activityCount))
                .addContainerGap(463, Short.MAX_VALUE))
        );

        rightStaffPanel.add(staffDashboard, "card2");

        staffActivityPanel.setPreferredSize(new java.awt.Dimension(599, 595));

        activityTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        activityTitle.setText("ACTIVITIES");

        activityNameTextLabel.setText("Name");

        activityAgeTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activityAgeTextfieldActionPerformed(evt);
            }
        });

        activityDescriptionLabel.setText("Description");

        activityCreateButton.setText("CREATE ACTIVITY");
        activityCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activityCreateButtonActionPerformed(evt);
            }
        });

        activityDescriptionTextarea.setColumns(20);
        activityDescriptionTextarea.setRows(5);
        jScrollPane2.setViewportView(activityDescriptionTextarea);

        activityCategoryLabel.setText("Category");

        activityCategoryCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sports", "Arts and Crafts", "Educational" }));

        activityAgeGroupLabel.setText("Age Group");

        activityViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Activity Id", "Name", "Description", "Category", "Age Group"
            }
        ));
        activityViewTable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                activityViewTableAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane8.setViewportView(activityViewTable);

        javax.swing.GroupLayout staffActivityPanelLayout = new javax.swing.GroupLayout(staffActivityPanel);
        staffActivityPanel.setLayout(staffActivityPanelLayout);
        staffActivityPanelLayout.setHorizontalGroup(
            staffActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffActivityPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(staffActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(staffActivityPanelLayout.createSequentialGroup()
                        .addGroup(staffActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(activityNameTextLabel)
                            .addComponent(activityCategoryLabel))
                        .addGap(58, 58, 58)
                        .addGroup(staffActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(staffActivityPanelLayout.createSequentialGroup()
                                .addComponent(activityCategoryCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(staffActivityPanelLayout.createSequentialGroup()
                                .addComponent(activityNameTextfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(activityDescriptionLabel)
                                .addGap(61, 61, 61))))
                    .addGroup(staffActivityPanelLayout.createSequentialGroup()
                        .addComponent(activityAgeGroupLabel)
                        .addGap(48, 48, 48)
                        .addComponent(activityAgeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, staffActivityPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(activityCreateButton)
                .addGap(88, 88, 88))
            .addGroup(staffActivityPanelLayout.createSequentialGroup()
                .addGroup(staffActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(staffActivityPanelLayout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(activityTitle))
                    .addGroup(staffActivityPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        staffActivityPanelLayout.setVerticalGroup(
            staffActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffActivityPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(activityTitle)
                .addGroup(staffActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(staffActivityPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(staffActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(activityNameTextLabel)
                            .addComponent(activityNameTextfield1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(staffActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(activityCategoryLabel)
                            .addComponent(activityCategoryCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(staffActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(activityAgeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(activityAgeGroupLabel))
                        .addGap(18, 18, 18)
                        .addComponent(activityCreateButton))
                    .addGroup(staffActivityPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(activityDescriptionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        rightStaffPanel.add(staffActivityPanel, "card4");

        staffScheduleLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        staffScheduleLabel.setText("STAFF SCHEDULE");

        scheduleActivityLabel.setText("Activity");

        activityDateLabel.setText("Date");

        activityStartTime.setText("Start Time");

        activityEndTimeLabel.setText("End Time");

        selectActivityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        activityLocationLabel.setText("Location");

        selectLocationCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Main Park", "Common Room", "Playground" }));

        staffScheduleSubmitButton.setText("SUBMIT");
        staffScheduleSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffScheduleSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout staffSchedulePanelLayout = new javax.swing.GroupLayout(staffSchedulePanel);
        staffSchedulePanel.setLayout(staffSchedulePanelLayout);
        staffSchedulePanelLayout.setHorizontalGroup(
            staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffSchedulePanelLayout.createSequentialGroup()
                .addGroup(staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(staffSchedulePanelLayout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(staffScheduleLabel))
                    .addGroup(staffSchedulePanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(staffSchedulePanelLayout.createSequentialGroup()
                                .addComponent(activityDateLabel)
                                .addGap(78, 78, 78)
                                .addComponent(scheduleStaffDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(staffSchedulePanelLayout.createSequentialGroup()
                                .addGroup(staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(scheduleActivityLabel)
                                    .addComponent(activityStartTime)
                                    .addComponent(activityEndTimeLabel)
                                    .addComponent(activityLocationLabel))
                                .addGap(62, 62, 62)
                                .addGroup(staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(activityEndTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(activityStartTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(selectActivityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(staffSchedulePanelLayout.createSequentialGroup()
                                        .addComponent(selectLocationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1))))))
                    .addGroup(staffSchedulePanelLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(staffScheduleSubmitButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        staffSchedulePanelLayout.setVerticalGroup(
            staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffSchedulePanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(staffScheduleLabel)
                .addGap(23, 23, 23)
                .addGroup(staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scheduleActivityLabel)
                    .addComponent(selectActivityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(activityDateLabel)
                    .addComponent(scheduleStaffDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activityStartTime)
                    .addComponent(activityStartTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activityEndTimeLabel)
                    .addComponent(activityEndTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(staffSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activityLocationLabel)
                    .addComponent(selectLocationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(staffScheduleSubmitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rightStaffPanel.add(staffSchedulePanel, "card5");

        dietaryPrefLabel.setText("DIETARY PREFERENCES");

        viewMealPrefTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Food Preference", "Beverage Preference"
            }
        ));
        jScrollPane3.setViewportView(viewMealPrefTable);

        javax.swing.GroupLayout dietryPreferencePanelLayout = new javax.swing.GroupLayout(dietryPreferencePanel);
        dietryPreferencePanel.setLayout(dietryPreferencePanelLayout);
        dietryPreferencePanelLayout.setHorizontalGroup(
            dietryPreferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dietryPreferencePanelLayout.createSequentialGroup()
                .addGroup(dietryPreferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dietryPreferencePanelLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(dietaryPrefLabel))
                    .addGroup(dietryPreferencePanelLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        dietryPreferencePanelLayout.setVerticalGroup(
            dietryPreferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dietryPreferencePanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(dietaryPrefLabel)
                .addGap(64, 64, 64)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(318, Short.MAX_VALUE))
        );

        rightStaffPanel.add(dietryPreferencePanel, "card5");

        staffSplitPane.setRightComponent(rightStaffPanel);

        leftStaffPanel.setBackground(new java.awt.Color(0, 51, 255));
        leftStaffPanel.setPreferredSize(new java.awt.Dimension(120, 595));

        staffActivityButton.setText("Activity");
        staffActivityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffActivityButtonActionPerformed(evt);
            }
        });

        staffDashboardButton.setText("DashBoard");
        staffDashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffDashboardButtonActionPerformed(evt);
            }
        });

        staffSchedulesButton.setText("Schedules");
        staffSchedulesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffSchedulesButtonActionPerformed(evt);
            }
        });

        staffDietButton.setText("Dietary Preference");
        staffDietButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffDietButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftStaffPanelLayout = new javax.swing.GroupLayout(leftStaffPanel);
        leftStaffPanel.setLayout(leftStaffPanelLayout);
        leftStaffPanelLayout.setHorizontalGroup(
            leftStaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftStaffPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftStaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(staffDietButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(leftStaffPanelLayout.createSequentialGroup()
                        .addGroup(leftStaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(staffActivityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staffDashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staffSchedulesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        leftStaffPanelLayout.setVerticalGroup(
            leftStaffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftStaffPanelLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(staffDashboardButton)
                .addGap(41, 41, 41)
                .addComponent(staffActivityButton)
                .addGap(44, 44, 44)
                .addComponent(staffSchedulesButton)
                .addGap(45, 45, 45)
                .addComponent(staffDietButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        staffSplitPane.setLeftComponent(leftStaffPanel);

        javax.swing.GroupLayout staffPanelLayout = new javax.swing.GroupLayout(staffPanel);
        staffPanel.setLayout(staffPanelLayout);
        staffPanelLayout.setHorizontalGroup(
            staffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffPanelLayout.createSequentialGroup()
                .addComponent(staffSplitPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        staffPanelLayout.setVerticalGroup(
            staffPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staffPanelLayout.createSequentialGroup()
                .addComponent(staffSplitPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bottomPanel.add(staffPanel, "card3");

        camperPanel.setPreferredSize(new java.awt.Dimension(700, 595));

        camperSplitPane.setDividerLocation(120);
        camperSplitPane.setPreferredSize(new java.awt.Dimension(700, 595));

        rightCamperPanel.setLayout(new java.awt.CardLayout());

        camperUpcomingActivityDashboardLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        camperUpcomingActivityDashboardLabel.setText("UPCOMING ACTIVITIES");

        camperscheduleImageLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        camperscheduleImageLabel.setText("SCHEDULE ACTIVITIES IMAGE");

        camperDashboardLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        camperDashboardLabel.setText("DASHBOARD");

        javax.swing.GroupLayout camperDashboardPanelLayout = new javax.swing.GroupLayout(camperDashboardPanel);
        camperDashboardPanel.setLayout(camperDashboardPanelLayout);
        camperDashboardPanelLayout.setHorizontalGroup(
            camperDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperDashboardPanelLayout.createSequentialGroup()
                .addGroup(camperDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(camperDashboardPanelLayout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(camperUpcomingActivityDashboardLabel))
                    .addGroup(camperDashboardPanelLayout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(camperscheduleImageLabel))
                    .addGroup(camperDashboardPanelLayout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(camperDashboardLabel)))
                .addContainerGap(249, Short.MAX_VALUE))
        );
        camperDashboardPanelLayout.setVerticalGroup(
            camperDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperDashboardPanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(camperDashboardLabel)
                .addGap(42, 42, 42)
                .addComponent(camperUpcomingActivityDashboardLabel)
                .addGap(18, 18, 18)
                .addComponent(camperscheduleImageLabel)
                .addContainerGap(410, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout camperDashboardLayout = new javax.swing.GroupLayout(camperDashboard);
        camperDashboard.setLayout(camperDashboardLayout);
        camperDashboardLayout.setHorizontalGroup(
            camperDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperDashboardLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(camperDashboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        camperDashboardLayout.setVerticalGroup(
            camperDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperDashboardLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(camperDashboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        rightCamperPanel.add(camperDashboard, "card2");

        camperActivityPanel.setPreferredSize(new java.awt.Dimension(599, 595));

        camperActivityLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        camperActivityLabel.setText("ACTIVITY");

        activityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Activity Id", "Name", "Category", "Description", "Age Group"
            }
        ));
        jScrollPane7.setViewportView(activityTable);

        registerActivityButton.setText("REGISTER");
        registerActivityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActivityButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout camperActivityPanelLayout = new javax.swing.GroupLayout(camperActivityPanel);
        camperActivityPanel.setLayout(camperActivityPanelLayout);
        camperActivityPanelLayout.setHorizontalGroup(
            camperActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperActivityPanelLayout.createSequentialGroup()
                .addGroup(camperActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(camperActivityPanelLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel6))
                    .addGroup(camperActivityPanelLayout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(registerActivityButton)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(camperActivityPanelLayout.createSequentialGroup()
                .addGroup(camperActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(camperActivityPanelLayout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(camperActivityLabel))
                    .addGroup(camperActivityPanelLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        camperActivityPanelLayout.setVerticalGroup(
            camperActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperActivityPanelLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(camperActivityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(camperActivityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(registerActivityButton)
                .addGap(36, 36, 36))
        );

        rightCamperPanel.add(camperActivityPanel, "card4");

        camperScheduleLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        camperScheduleLabel.setText("SCHEDULE");

        viewMySchedulesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Start Time", "End Time", "Location", "Activity"
            }
        ));
        jScrollPane6.setViewportView(viewMySchedulesTable);

        javax.swing.GroupLayout camperSchedulePanelLayout = new javax.swing.GroupLayout(camperSchedulePanel);
        camperSchedulePanel.setLayout(camperSchedulePanelLayout);
        camperSchedulePanelLayout.setHorizontalGroup(
            camperSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperSchedulePanelLayout.createSequentialGroup()
                .addGroup(camperSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(camperSchedulePanelLayout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(camperScheduleLabel))
                    .addGroup(camperSchedulePanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        camperSchedulePanelLayout.setVerticalGroup(
            camperSchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperSchedulePanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(camperScheduleLabel)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rightCamperPanel.add(camperSchedulePanel, "card5");

        dietPreferencesLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        dietPreferencesLabel.setText("Dietary Preferences");

        allergiesDietLabel.setText("Allergies");

        medicalDietLabel.setText("Medical Conditions");

        beveragesDietlabel.setText("Beverages");

        foodDietLabel.setText("Food Preferences");

        editDietButton.setText("EDIT");
        editDietButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDietButtonActionPerformed(evt);
            }
        });

        beverageDietComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "juice", "coke" }));

        foodDietComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vegetarian", "NonVegetarian", "Vegan" }));

        saveDietButton.setText("SAVE");
        saveDietButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDietButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout camperDietPanelLayout = new javax.swing.GroupLayout(camperDietPanel);
        camperDietPanel.setLayout(camperDietPanelLayout);
        camperDietPanelLayout.setHorizontalGroup(
            camperDietPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperDietPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(camperDietPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(camperDietPanelLayout.createSequentialGroup()
                        .addComponent(medicalDietLabel)
                        .addGap(56, 56, 56)
                        .addComponent(medicalDietTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(camperDietPanelLayout.createSequentialGroup()
                        .addComponent(allergiesDietLabel)
                        .addGap(46, 46, 46)
                        .addComponent(allergiesDietTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(camperDietPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foodDietLabel)
                    .addComponent(beveragesDietlabel))
                .addGap(28, 28, 28)
                .addGroup(camperDietPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(beverageDietComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foodDietComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
            .addGroup(camperDietPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(editDietButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveDietButton)
                .addGap(100, 100, 100))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, camperDietPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dietPreferencesLabel)
                .addGap(226, 226, 226))
        );
        camperDietPanelLayout.setVerticalGroup(
            camperDietPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperDietPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(dietPreferencesLabel)
                .addGap(37, 37, 37)
                .addGroup(camperDietPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allergiesDietLabel)
                    .addComponent(foodDietLabel)
                    .addComponent(allergiesDietTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foodDietComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(camperDietPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medicalDietLabel)
                    .addComponent(medicalDietTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(beveragesDietlabel)
                    .addComponent(beverageDietComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90)
                .addGroup(camperDietPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDietButton)
                    .addComponent(saveDietButton))
                .addGap(0, 304, Short.MAX_VALUE))
        );

        rightCamperPanel.add(camperDietPanel, "card6");

        camperSplitPane.setRightComponent(rightCamperPanel);

        leftCamperPanel.setBackground(new java.awt.Color(0, 51, 255));
        leftCamperPanel.setPreferredSize(new java.awt.Dimension(120, 595));

        camperActivityButton.setText("Activity");
        camperActivityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camperActivityButtonActionPerformed(evt);
            }
        });

        camperDashboardButton.setText("DashBoard");
        camperDashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camperDashboardButtonActionPerformed(evt);
            }
        });

        camperDietButton.setText("Dietary Preference");
        camperDietButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camperDietButtonActionPerformed(evt);
            }
        });

        camperScheduleButton.setText("Schedules");
        camperScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camperScheduleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftCamperPanelLayout = new javax.swing.GroupLayout(leftCamperPanel);
        leftCamperPanel.setLayout(leftCamperPanelLayout);
        leftCamperPanelLayout.setHorizontalGroup(
            leftCamperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftCamperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftCamperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(camperActivityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(camperDashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(camperDietButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(camperScheduleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftCamperPanelLayout.setVerticalGroup(
            leftCamperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftCamperPanelLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(camperDashboardButton)
                .addGap(41, 41, 41)
                .addComponent(camperActivityButton)
                .addGap(36, 36, 36)
                .addComponent(camperScheduleButton)
                .addGap(38, 38, 38)
                .addComponent(camperDietButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        camperSplitPane.setLeftComponent(leftCamperPanel);

        javax.swing.GroupLayout camperPanelLayout = new javax.swing.GroupLayout(camperPanel);
        camperPanel.setLayout(camperPanelLayout);
        camperPanelLayout.setHorizontalGroup(
            camperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperPanelLayout.createSequentialGroup()
                .addComponent(camperSplitPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        camperPanelLayout.setVerticalGroup(
            camperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camperPanelLayout.createSequentialGroup()
                .addComponent(camperSplitPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bottomPanel.add(camperPanel, "card4");

        campSplitPane.setRightComponent(bottomPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(campSplitPane)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(campSplitPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void staffDietButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffDietButtonActionPerformed
        // TODO add your handling code here:
        rightStaffPanel.removeAll();
        rightStaffPanel.add(dietryPreferencePanel);
        rightStaffPanel.repaint();
        rightStaffPanel.revalidate();
        
        // Load Data in Table
        

        try {
            mealPreferenceList =  (ArrayList<MealPreference>) mealPreferenceService.getAllMealPreferences();
        } catch (CustomException ex) {
            Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultTableModel mealPreferenceModel = (DefaultTableModel)viewMealPrefTable.getModel();
        mealPreferenceModel.setRowCount(0);
        Object rowData[] = new Object[3];

        for(int j = 0; j < mealPreferenceList.size(); j++)
        {
            rowData[0] = mealPreferenceList.get(j).getStudent().getFirstName();
            rowData[1] = mealPreferenceList.get(j).getFoodPreference();
            rowData[2] = mealPreferenceList.get(j).getBeveragePreferance();

            mealPreferenceModel.addRow(rowData);

        }

        // End //
        
        
        
        
      
    }//GEN-LAST:event_staffDietButtonActionPerformed

    private void staffDashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffDashboardButtonActionPerformed
        // TODO add your handling code here:
        rightStaffPanel.removeAll();
        rightStaffPanel.add(staffDashboard);
        rightStaffPanel.repaint();
        rightStaffPanel.revalidate();
    }//GEN-LAST:event_staffDashboardButtonActionPerformed

    private void camperDashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camperDashboardButtonActionPerformed
        // TODO add your handling code here:
        rightCamperPanel.removeAll();
        rightCamperPanel.add(camperDashboard);
        rightCamperPanel.repaint();
        rightCamperPanel.revalidate();
    }//GEN-LAST:event_camperDashboardButtonActionPerformed

    private void campFeedbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campFeedbackButtonActionPerformed
        // TODO add your handling code here:
        rightPanel.removeAll();
        rightPanel.add(feedbackPanel);
        rightPanel.repaint();
        rightPanel.revalidate();
        //Dashboard starts
        try {
                
                   feedbackList = (ArrayList<Feedback>) feedbackService.getAllFeedbacks();
               } catch (CustomException ex) {
                   Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
               int activityCount =0;
               int foodCount = 0;
               int managementCOunt = 0;
               int staffCount = 0;
               for(Feedback feedbk : feedbackList)
               {
                   if(!feedbk.getFoodFeedback().toString().isEmpty())
                   {
                       foodCount ++;
                   }
                   if(!feedbk.getActivityFeedback().toString().isEmpty())
                   {
                        activityCount ++;
                   }
                   if(!feedbk.getManagementFeedback().toString().isEmpty())
                   {
                        managementCOunt ++;
                   }
                   if(!feedbk.getStaffFeedback().toString().isEmpty())
                   {
                        staffCount ++;
                   }
               }
        
                activityFeedbackText.setText(String.valueOf(activityCount));
        
                staffFeedbackText.setText(String.valueOf(staffCount));
                
                managementFeedbackText.setText(String.valueOf(managementCOunt));
                
                foodFeedbackText.setText(String.valueOf(foodCount));
               
                   
                   // Dashboard ends
        
        //Dashboard code end

    }//GEN-LAST:event_campFeedbackButtonActionPerformed

     private PieDataset createDataset(){
        DefaultPieDataset  result = new DefaultPieDataset();
       
        
        try {
            feedbackList = (ArrayList<Feedback>) feedbackService.getAllFeedbacks();
        } catch (CustomException ex) {
            Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
                       int activityCount =0;
               int foodCount = 0;
               int managementCOunt = 0;
               int staffCount = 0;
               for(Feedback feedbk : feedbackList)
               {
                   if(!feedbk.getFoodFeedback().toString().isEmpty())
                   {
                       foodCount ++;
                   }
                   if(!feedbk.getActivityFeedback().toString().isEmpty())
                   {
                        activityCount ++;
                   }
                   if(!feedbk.getManagementFeedback().toString().isEmpty())
                   {
                        managementCOunt ++;
                   }
                   if(!feedbk.getStaffFeedback().toString().isEmpty())
                   {
                        staffCount ++;
                   }
               }
        
        result.setValue("Activity", activityCount);
        result.setValue("Food", foodCount);
        result.setValue("management", managementCOunt);
        result.setValue("Staff", staffCount);

        return result;
    }
    
    private JFreeChart CreateChart(PieDataset dataset, String title)
    {
        
        JFreeChart chart = ChartFactory.createPieChart3D(title, dataset,true,true,false);
        PiePlot3D plot = (PiePlot3D) chart.getPlot();
        plot.setStartAngle(0);
        plot.setDirection(Rotation.CLOCKWISE);
        plot.setForegroundAlpha(0.5f);
        return chart;
    }
    
    private void camperActivityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camperActivityButtonActionPerformed
        // TODO add your handling code here:
         rightCamperPanel.removeAll();
        rightCamperPanel.add(camperActivityPanel);
        rightCamperPanel.repaint();
        rightCamperPanel.revalidate();
        
        // Load Activity Data
        
          try {
            activityList = (ArrayList<Activity>) activityService.getAllActivities();
        } catch (CustomException ex) {
            Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
         DefaultTableModel activityModel = (DefaultTableModel)activityTable.getModel();
        activityModel.setRowCount(0);
        Object rowData[] = new Object[5]; 
        
        for(int j = 0; j < activityList.size(); j++)
        {
        rowData[0] = activityList.get(j).getActivityId();
        rowData[1] = activityList.get(j).getActivityName();
        rowData[2] = activityList.get(j).getCategory();
        rowData[3] = activityList.get(j).getDescription();
        rowData[4] = activityList.get(j).getAgeGroup();
        activityModel.addRow(rowData);
        
        }
        
        // End 
        
        
        
        
        
    }//GEN-LAST:event_camperActivityButtonActionPerformed

    private void activityViewTableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_activityViewTableAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_activityViewTableAncestorAdded

    private void activityAgeTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activityAgeTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activityAgeTextfieldActionPerformed

    private void designationStaffActivityDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_designationStaffActivityDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_designationStaffActivityDropDownActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void loginCampButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginCampButtonActionPerformed
        // TODO add your handling code here:
         // Create new admin
//       CampAdmin newAdmin = new CampAdmin();
//        newAdmin.setUsername("yashj");
//        newAdmin.setPassword("admin@123");
//       newAdmin.setRole(AppUser.Role.CampAdmin);
//       try {          
//           adminService.addCampAdmin(newAdmin);
//      } catch (CustomException ex) {
//           Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
//       }
        
        /// Admin Created //
        
        /// Create new staff //
        
//        CampStaff newStaff = new CampStaff();
//        newStaff.setUsername("Vrinda");
//        newStaff.setPassword("admin@123");
//       newStaff.setRole(AppUser.Role.CampStaff);
//       try {          
//           staffService.addCampStaff(newStaff);
//      } catch (CustomException ex) {
//           Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
//       }
//        
        
        ////////Staff Created//////
        
        
        
        if(roleCampDropBox.getSelectedItem().toString()==("admin")){
            
            
            
           try {
               admin = adminService.loginByCampAdminId(usernameCampTextField.getText(), passwordCampTextField.getText());
           } catch (CustomException ex) {
               Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           
         if(admin.getUserId() == null){
                System.out.println(admin.getUserId());
               
                JOptionPane.showMessageDialog(this, "Incorrect Username or Password", "Failed", JOptionPane.INFORMATION_MESSAGE);

         }
         
         
         else{   //Logging In
           
        campSplitPane.setVisible(true);
        topPanel.setVisible(true);
        bottomPanel.setVisible(true);
        
        loginPanel.setVisible(false);
        bottomPanel.removeAll();
        bottomPanel.add(adminPanel);
        bottomPanel.repaint();
        bottomPanel.revalidate();
        
        jSplitPane2.setVisible(true);
        leftPanel.setVisible(true);
        rightPanel.setVisible(true);
        
        rightPanel.removeAll();
        rightPanel.add(adminDashboard);
        rightPanel.repaint();
        rightPanel.revalidate();
        topPanelHeaderLabel.setText("ADMIN LOGIN");
        //Views Ended
         // Dashboard
               try {
                  
                   camperList = (ArrayList<Student>) camperService.getAllCampers();
               } catch (CustomException ex) {
                   Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
        studentTextLabel.setText(String.valueOf(camperList.size()));
        
               try {
                   activityList = (ArrayList<Activity>) activityService.getAllActivities();
               } catch (CustomException ex) {
                   Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
        
            activityListTextLabel.setText(String.valueOf(activityList.size()));
            
            
               try {
                   staffList = (ArrayList<CampStaff>) staffService.getAllCampStaff();
                
               } catch (CustomException ex) {
                   Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
               
               staffTextLabel.setText(String.valueOf(staffList.size()));
               
               
                   
                   // Dashboard ends
        
        
         } // Else for logged in ended
        
        }
        else if(roleCampDropBox.getSelectedItem().toString()== "staff"){   // Staff
            
             try {
               staff = staffService.loginByCampStaffId(usernameCampTextField.getText(), passwordCampTextField.getText());
           } catch (CustomException ex) {
               Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           
         if(staff.getUserId() == null){
                System.out.println(staff.getUserId());
               
                JOptionPane.showMessageDialog(this, "Incorrect Username or Password", "Failed", JOptionPane.INFORMATION_MESSAGE);

         }
         
         
         else{   //Logging In
            
          
        campSplitPane.setVisible(true);
        topPanel.setVisible(true);
        bottomPanel.setVisible(true);
        loginPanel.setVisible(false);
        bottomPanel.removeAll();
        bottomPanel.add(staffPanel);
        bottomPanel.repaint();
        bottomPanel.revalidate();
        
        staffSplitPane.setVisible(true);
        leftStaffPanel.setVisible(true);
        rightStaffPanel.setVisible(true);
        
        rightStaffPanel.removeAll();
        rightStaffPanel.add(staffDashboard);
        rightStaffPanel.repaint();
        rightStaffPanel.revalidate();
        topPanelHeaderLabel.setText("STAFF LOGIN");
        
        //Staff Dashboard Started
        
        try {
                  
                   camperList = (ArrayList<Student>) camperService.getAllCampers();
               } catch (CustomException ex) {
                   Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
        camperCount.setText(String.valueOf(camperList.size()));
        
               try {
                   activityList = (ArrayList<Activity>) activityService.getAllActivities();
               } catch (CustomException ex) {
                   Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
        
            activityCount.setText(String.valueOf(activityList.size()));
        
        
        //Staff Dashboard Ends
        
        
        
         } // staff ended
        
        }
        
        else{         //Camper Role
            
            
              try {
               camper = camperService.loginByCamperId(usernameCampTextField.getText(), passwordCampTextField.getText());
           } catch (CustomException ex) {
               Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           
         if(camper.getUserId() == null){
                System.out.println(camper.getUserId());
               
                JOptionPane.showMessageDialog(this, "Incorrect Username or Password", "Failed", JOptionPane.INFORMATION_MESSAGE);

         }
         
         
         else{  // Camper Logged In 
            
        userLoggedInId = camper.getUserId();
        System.out.println(camper.getUserId());
        
        campSplitPane.setVisible(true);
        topPanel.setVisible(true);
        bottomPanel.setVisible(true);
        loginPanel.setVisible(false);
        bottomPanel.removeAll();
        bottomPanel.add(camperPanel);
        bottomPanel.repaint();
        bottomPanel.revalidate();
        camperSplitPane.setVisible(true);
        leftCamperPanel.setVisible(true);
        rightCamperPanel.setVisible(true);
        
        rightCamperPanel.removeAll();
        rightCamperPanel.add(camperDashboard);
        rightCamperPanel.repaint();
        rightCamperPanel.revalidate();
        topPanelHeaderLabel.setText("CAMPER LOGIN");
        
         }// End of camper logged in
        }
        
    }//GEN-LAST:event_loginCampButtonActionPerformed

    private void campAdmindashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campAdmindashboardButtonActionPerformed
        // TODO add your handling code here:
        rightPanel.removeAll();
        rightPanel.add(adminDashboard);
        rightPanel.repaint();
        rightPanel.revalidate();
    }//GEN-LAST:event_campAdmindashboardButtonActionPerformed

    private void campRegButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campRegButtonActionPerformed
        // TODO add your handling code here:
        rightPanel.removeAll();
        rightPanel.add(registrationReportPanel);
        rightPanel.repaint();
        rightPanel.revalidate();
        // Load Data in Table
        
        try {
            camperList = (ArrayList<Student>) camperService.getAllCampers();
        } catch (CustomException ex) {
            Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
         DefaultTableModel camperModel = (DefaultTableModel)camperRegistrationReportTable.getModel();
        camperModel.setRowCount(0);
        Object rowData[] = new Object[6]; 
        
        
        for(int j = 0; j < camperList.size(); j++)
        {
     
        rowData[0] = camperList.get(j).getFirstName();
        rowData[1] = camperList.get(j).getLastName();
        rowData[2] = camperList.get(j).getRegistrationDate();
        rowData[3] = camperList.get(j).getEmail();
        rowData[4] = camperList.get(j).getAge();
        rowData[5] = camperList.get(j).getAddress();
        
       
        camperModel.addRow(rowData);
        
        }
        
        
        
        //End of Load Data in Table
        
        
        
    }//GEN-LAST:event_campRegButtonActionPerformed

    private void staffActivityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffActivityButtonActionPerformed
        // TODO add your handling code here:
        rightStaffPanel.removeAll();
        rightStaffPanel.add(staffActivityPanel);
        rightStaffPanel.repaint();
        rightStaffPanel.revalidate();
        
        //Load data to table
          try {
            activityList = (ArrayList<Activity>) activityService.getAllActivities();
        } catch (CustomException ex) {
            Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
         DefaultTableModel activityModel = (DefaultTableModel)activityViewTable.getModel();
        activityModel.setRowCount(0);
        Object rowData[] = new Object[5]; 
        
        for(int j = 0; j < activityList.size(); j++)
        {
        rowData[0] = activityList.get(j).getActivityId();
        rowData[1] = activityList.get(j).getActivityName();
        rowData[3] = activityList.get(j).getCategory();
        rowData[4] = activityList.get(j).getAgeGroup();
        rowData[2] = activityList.get(j).getDescription();
       
        activityModel.addRow(rowData);
        
        }
        
        // End 
        
        
    }//GEN-LAST:event_staffActivityButtonActionPerformed

    private void staffSchedulesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffSchedulesButtonActionPerformed
        // TODO add your handling code here:
        rightStaffPanel.removeAll();
        rightStaffPanel.add(staffSchedulePanel);
        rightStaffPanel.repaint();
        rightStaffPanel.revalidate();
        
        //Load Activities
        try {
            

        activityList = (ArrayList)this.activityService.getAllActivities();
        } catch (CustomException ex) {
            Logger.getLogger(SchoolMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        activityIds.clear();
        for(Activity i : activityList)
       {
         activityIds.add(i.getActivityId());
       }
        DefaultComboBoxModel activityComboModel = new DefaultComboBoxModel();
        activityComboModel.addAll(activityIds);
        selectActivityCombo.setModel(activityComboModel);
        selectActivityCombo.setSelectedIndex(0);
        
        
    }//GEN-LAST:event_staffSchedulesButtonActionPerformed

    private void camperScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camperScheduleButtonActionPerformed
        // TODO add your handling code here:
        rightCamperPanel.removeAll();
        rightCamperPanel.add(camperSchedulePanel);
        rightCamperPanel.repaint();
        rightCamperPanel.revalidate();
        
        
        //Load Data in table
        
           try {
            scheduleList =  (ArrayList<Schedule>) scheduleService.getSchedulesForUserById(userLoggedInId);
         System.out.println(scheduleList.get(0).getDate());
        } catch (CustomException ex) {
            Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
           
        DefaultTableModel scheduleModel = (DefaultTableModel)viewMySchedulesTable.getModel();
        scheduleModel.setRowCount(0);
        Object rowData[] = new Object[5]; 
        
        for(int j = 0; j < scheduleList.size(); j++)
        {
        rowData[0] = scheduleList.get(j).getDate();
        rowData[1] = scheduleList.get(j).getStartTime();
        rowData[2] = scheduleList.get(j).getEndTime();
        rowData[3] = scheduleList.get(j).getLocation();
        rowData[4] = scheduleList.get(j).getActivity().getActivityName();
       
        scheduleModel.addRow(rowData);}
        
        
        
    }//GEN-LAST:event_camperScheduleButtonActionPerformed

    private void camperDietButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camperDietButtonActionPerformed
        // TODO add your handling code here:
        rightCamperPanel.removeAll();
        rightCamperPanel.add(camperDietPanel);
        rightCamperPanel.repaint();
        rightCamperPanel.revalidate();
        
        //Load existing dietry preferences
        
           try {
            mealPreference =  mealPreferenceService.getMealPreferenceByStudentId(userLoggedInId);
        } catch (CustomException ex) {
            Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
           
           allergiesDietTextField.setText(mealPreference.getAllergies());
            medicalDietTextField.setText(mealPreference.getMedicalConditions());
            if (mealPreference.getBeveragePreferance()== MealPreference.Beverage.juice){
            beverageDietComboBox.setSelectedIndex(0);}
            else{
                beverageDietComboBox.setSelectedIndex(0);
            }
            
            if (mealPreference.getFoodPreference()== MealPreference.FoodPreference.vegetarian){
            foodDietComboBox.setSelectedIndex(0);}
            else if (mealPreference.getFoodPreference()== MealPreference.FoodPreference.nonvegetarian){
                foodDietComboBox.setSelectedIndex(1);
            }
            else{
                 foodDietComboBox.setSelectedIndex(2);
            }
            
            //Disable from editing
            allergiesDietTextField.setEnabled(false);
             medicalDietTextField.setEnabled(false);
             beverageDietComboBox.setEnabled(false);
             foodDietComboBox.setEnabled(false);
        
    }//GEN-LAST:event_camperDietButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        campSplitPane.setVisible(false);
        topPanel.setVisible(false);
        bottomPanel.setVisible(false);
        loginPanel.setVisible(true);
        
        usernameCampTextField.setText("");
        passwordCampTextField.setText("");
        
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void activityCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activityCreateButtonActionPerformed
        // TODO add your handling code here:
        activity.setActivityName(activityNameTextfield1.getText());
        if(activityCategoryCombo.getSelectedItem() == "Sports"){
         activity.setCategory(Activity.Category.sports);
        }
        else if(activityCategoryCombo.getSelectedItem() == "Arts and Crafts"){
        activity.setCategory(Activity.Category.artsCrafts);
        }
        else{
        activity.setCategory(Activity.Category.educational);
        }
        
        
        activity.setAgeGroup(activityAgeTextfield.getText());
        activity.setDescription(activityDescriptionTextarea.getText());
        
        try {
            activityService.addActivity(activity);
        } catch (CustomException ex) {
            Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
          JOptionPane.showMessageDialog(this, "Activity Added", "Success", JOptionPane.INFORMATION_MESSAGE);
          
          activityNameTextfield1.setText(" ");
          activityAgeTextfield.setText(" ");
          activityDescriptionTextarea.setText(" ");
        
        
        // Reload Data
        try {
            activityList = (ArrayList<Activity>) activityService.getAllActivities();
        } catch (CustomException ex) {
            Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
         DefaultTableModel activityModel = (DefaultTableModel)activityViewTable.getModel();
        activityModel.setRowCount(0);
        Object rowData[] = new Object[5]; 
        
        for(int j = 0; j < activityList.size(); j++)
        {
        rowData[0] = activityList.get(j).getActivityId();
        rowData[1] = activityList.get(j).getActivityName();
        rowData[3] = activityList.get(j).getCategory();
        rowData[4] = activityList.get(j).getAgeGroup();
        rowData[2] = activityList.get(j).getDescription();
       
        activityModel.addRow(rowData);
        
        }
        //
        
    }//GEN-LAST:event_activityCreateButtonActionPerformed

    private void staffScheduleSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffScheduleSubmitButtonActionPerformed
        // TODO add your handling code here:
        schedule.setDate(scheduleStaffDate.getDate().toString());
         schedule.setStartTime(activityStartTimeText.getText());
         schedule.setEndTime(activityEndTimeText.getText());
        schedule.setLocation(selectLocationCombo.getSelectedItem().toString());
        
        try {
            scheduleService.addScheduleByActivityId(schedule, Integer.parseInt(selectActivityCombo.getSelectedItem().toString()));
        } catch (CustomException ex) {
            Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        scheduleStaffDate.resetKeyboardActions();
        activityStartTimeText.setText(" ");
        activityEndTimeText.setText(" ");
        
         JOptionPane.showMessageDialog(this, "Schedule Added", "Success", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_staffScheduleSubmitButtonActionPerformed

    private void registerActivityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActivityButtonActionPerformed
        // TODO add your handling code here:
        
        
        
        int selectedRow = activityTable.getSelectedRow();
        if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(null, "No row selected!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
              int selectedId = (int) activityTable.getValueAt(selectedRow, 0);
             
          
            try {
                activity = activityService.getActivityById(selectedId);
            } catch (CustomException ex) {
                Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
              
              
            try {
                camperService.registerActivity(userLoggedInId, activity);
                JOptionPane.showMessageDialog(this, "Registered Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            } catch (CustomException ex) {
                Logger.getLogger(CampMainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                } 
             
        
        
    }//GEN-LAST:event_registerActivityButtonActionPerformed

    private void editDietButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDietButtonActionPerformed
        // TODO add your handling code here:
        
        //Enable Editing
      
            allergiesDietTextField.setEnabled(true);
             medicalDietTextField.setEnabled(true);
             beverageDietComboBox.setEnabled(true);
             foodDietComboBox.setEnabled(true);
    }//GEN-LAST:event_editDietButtonActionPerformed

    private void saveDietButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDietButtonActionPerformed
        // TODO add your handling code here:
        mealPreference.setMedicalConditions(medicalDietTextField.getText());
        mealPreference.setAllergies(allergiesDietTextField.getText());
        
         if(beverageDietComboBox.getSelectedItem().toString() == "juice"){
            mealPreference.setBeveragePreferance(MealPreference.Beverage.juice);
        }
        else {
         mealPreference.setBeveragePreferance(MealPreference.Beverage.coke);
        }
        
        if(foodDietComboBox.getSelectedItem().toString() == "Vegetarian"){
            mealPreference.setFoodPreference(MealPreference.FoodPreference.vegetarian);
        }
        else if(foodDietComboBox.getSelectedItem().toString() == "NonVegetarian") {
          mealPreference.setFoodPreference(MealPreference.FoodPreference.nonvegetarian);
        }
        else{
         mealPreference.setFoodPreference(MealPreference.FoodPreference.vegan);
        }
        
        //Disable Editing
      
            allergiesDietTextField.setEnabled(false);
             medicalDietTextField.setEnabled(false);
             beverageDietComboBox.setEnabled(false);
             foodDietComboBox.setEnabled(false);
         
    }//GEN-LAST:event_saveDietButtonActionPerformed

    private void feedbackChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedbackChartButtonActionPerformed
        // TODO add your handling code here:
        PieDataset dataset = createDataset();
        CreateChart CC = new CreateChart("Feedback","Feedback", dataset );
        CC.pack();
        //CC.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        CC.setVisible(true);
    }//GEN-LAST:event_feedbackChartButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CampMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CampMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CampMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CampMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CampMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RegistrationReportTextLabel;
    private javax.swing.JLabel activityAgeGroupLabel;
    private javax.swing.JTextField activityAgeTextfield;
    private javax.swing.JComboBox<String> activityCategoryCombo;
    private javax.swing.JLabel activityCategoryLabel;
    private javax.swing.JLabel activityCount;
    private javax.swing.JButton activityCreateButton;
    private javax.swing.JLabel activityDateLabel;
    private javax.swing.JLabel activityDescriptionLabel;
    private javax.swing.JTextArea activityDescriptionTextarea;
    private javax.swing.JLabel activityEndTimeLabel;
    private javax.swing.JTextField activityEndTimeText;
    private javax.swing.JLabel activityFeedbackLabel;
    private javax.swing.JLabel activityFeedbackText;
    private javax.swing.JLabel activityListTextLabel;
    private javax.swing.JLabel activityLocationLabel;
    private javax.swing.JLabel activityNameTextLabel;
    private javax.swing.JTextField activityNameTextfield1;
    private javax.swing.JLabel activityStartTime;
    private javax.swing.JTextField activityStartTimeText;
    private javax.swing.JTable activityTable;
    private javax.swing.JLabel activityTitle;
    private javax.swing.JTable activityViewTable;
    private javax.swing.JPanel adminDashboard;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JLabel allergiesDietLabel;
    private javax.swing.JTextField allergiesDietTextField;
    private javax.swing.JComboBox<String> beverageDietComboBox;
    private javax.swing.JLabel beveragesDietlabel;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton campAdmindashboardButton;
    private javax.swing.JButton campFeedbackButton;
    private javax.swing.JButton campRegButton;
    private javax.swing.JSplitPane campSplitPane;
    private javax.swing.JButton camperActivityButton;
    private javax.swing.JLabel camperActivityLabel;
    private javax.swing.JPanel camperActivityPanel;
    private javax.swing.JLabel camperCount;
    private javax.swing.JPanel camperDashboard;
    private javax.swing.JButton camperDashboardButton;
    private javax.swing.JLabel camperDashboardLabel;
    private javax.swing.JPanel camperDashboardPanel;
    private javax.swing.JButton camperDietButton;
    private javax.swing.JPanel camperDietPanel;
    private javax.swing.JPanel camperPanel;
    private javax.swing.JTable camperRegistrationReportTable;
    private javax.swing.JButton camperScheduleButton;
    private javax.swing.JLabel camperScheduleLabel;
    private javax.swing.JPanel camperSchedulePanel;
    private javax.swing.JSplitPane camperSplitPane;
    private javax.swing.JLabel camperUpcomingActivityDashboardLabel;
    private javax.swing.JLabel camperscheduleImageLabel;
    private javax.swing.JTextField contactStaffActivityField;
    private javax.swing.JLabel contactStaffActivityLabel;
    private javax.swing.JButton createStaffActivityButton;
    private javax.swing.JLabel dashboardCampLabel;
    private javax.swing.JLabel dashboardStaffLabel;
    private javax.swing.JLabel dashboardStaffLabel1;
    private javax.swing.JButton deleteStaffActivityButton;
    private javax.swing.JComboBox<String> designationStaffActivityDropDown;
    private javax.swing.JLabel designationStaffActivityLabel;
    private javax.swing.JLabel dietPreferencesLabel;
    private javax.swing.JLabel dietaryPrefLabel;
    private javax.swing.JPanel dietryPreferencePanel;
    private javax.swing.JButton editDietButton;
    private javax.swing.JButton editStaffActivityButton;
    private javax.swing.JLabel emailStaffActivityLabel;
    private javax.swing.JButton feedbackChartButton;
    private javax.swing.JPanel feedbackPanel;
    private javax.swing.JTextField firstNameStaffActivityField;
    private javax.swing.JLabel firstNameStaffActivityLabel;
    private javax.swing.JComboBox<String> foodDietComboBox;
    private javax.swing.JLabel foodDietLabel;
    private javax.swing.JLabel foodFeedbackLabel;
    private javax.swing.JLabel foodFeedbackText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private com.toedter.components.JLocaleChooser jLocaleChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel lastNameStaffActivityLabel;
    private javax.swing.JPanel leftCamperPanel;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel leftStaffPanel;
    private javax.swing.JButton loginCampButton;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel managementFeedbackLabel;
    private javax.swing.JLabel managementFeedbackText;
    private javax.swing.JLabel medicalDietLabel;
    private javax.swing.JTextField medicalDietTextField;
    private javax.swing.JLabel parentCrudtextLabel;
    private javax.swing.JLabel parentDashboardLabel;
    private javax.swing.JTextField passwordCampTextField;
    private javax.swing.JLabel passwordLoginCampLabel;
    private javax.swing.JButton registerActivityButton;
    private javax.swing.JPanel registrationReportPanel;
    private javax.swing.JPanel rightCamperPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JPanel rightStaffPanel;
    private javax.swing.JComboBox<String> roleCampDropBox;
    private javax.swing.JLabel roleCampLoginLabel;
    private javax.swing.JButton saveDietButton;
    private javax.swing.JButton saveStaffActivityButton;
    private javax.swing.JLabel scheduleActivityLabel;
    private com.toedter.calendar.JDateChooser scheduleStaffDate;
    private javax.swing.JComboBox<String> selectActivityCombo;
    private javax.swing.JComboBox<String> selectLocationCombo;
    private javax.swing.JButton staffActivityButton;
    private javax.swing.JLabel staffActivityLabel;
    private javax.swing.JPanel staffActivityPanel;
    private javax.swing.JComboBox<String> staffActivityStatusDropDown;
    private javax.swing.JLabel staffActivityStatusLabel;
    private javax.swing.JTable staffActivityTable;
    private javax.swing.JPanel staffCrudPanel;
    private javax.swing.JPanel staffDashboard;
    private javax.swing.JButton staffDashboardButton;
    private javax.swing.JButton staffDietButton;
    private javax.swing.JLabel staffFeedbackLabel;
    private javax.swing.JLabel staffFeedbackText;
    private javax.swing.JPanel staffPanel;
    private javax.swing.JLabel staffScheduleLabel;
    private javax.swing.JPanel staffSchedulePanel;
    private javax.swing.JButton staffScheduleSubmitButton;
    private javax.swing.JButton staffSchedulesButton;
    private javax.swing.JSplitPane staffSplitPane;
    private javax.swing.JLabel staffTextLabel;
    private javax.swing.JLabel studentTextLabel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel topPanelHeaderLabel;
    private javax.swing.JLabel userNameCampLoginLabel;
    private javax.swing.JTextField usernameCampTextField;
    private javax.swing.JTable viewMealPrefTable;
    private javax.swing.JTable viewMySchedulesTable;
    private javax.swing.JLabel welcomeCampLabel;
    // End of variables declaration//GEN-END:variables
}
